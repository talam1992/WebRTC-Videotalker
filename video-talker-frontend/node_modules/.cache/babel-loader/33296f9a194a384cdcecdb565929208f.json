{"ast":null,"code":"import store from '../../store/store';\nimport { callStates, setCallerUsername, setCallingDialogVisible, setCallState, setLocalStream } from \"../../store/actions/callActions\";\nimport * as wss from '../wssConnection/wssConnection';\nconst defaultConstrains = {\n  video: true,\n  audio: true\n};\nexport const getLocalStream = () => {\n  navigator.mediaDevices.getUserMedia(defaultConstrains).then(stream => {\n    store.dispatch(setLocalStream(stream));\n    store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n  }).catch(err => {\n    console.log('error occured when trying to get access to get local stream');\n    console.log(err);\n  });\n};\nlet connectedUserSocketId;\nexport const callToOtherUser = calleeDetails => {\n  connectedUserSocketId = calleeDetails.socketId;\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n  store.dispatch(setCallingDialogVisible(true));\n  wss.sendPreOffer({\n    callee: calleeDetails,\n    caller: {\n      username: store.getState().dashboard.username\n    }\n  });\n};\nexport const handlePreOffer = data => {\n  connectedUserSocketId = data.callerSocketId;\n  store.dispatch(setCallerUsername(data.callerUsername));\n  store.dispatch(setCallState(callStates.CALL_REQUESTED));\n};","map":{"version":3,"sources":["C:/Users/Timothy Lam/Documents/GitHub/WebRTC-Videotalker/video-talker-frontend/src/utils/webRTC/webRTCHandler.js"],"names":["store","callStates","setCallerUsername","setCallingDialogVisible","setCallState","setLocalStream","wss","defaultConstrains","video","audio","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","dispatch","CALL_AVAILABLE","catch","err","console","log","connectedUserSocketId","callToOtherUser","calleeDetails","socketId","CALL_IN_PROGRESS","sendPreOffer","callee","caller","username","getState","dashboard","handlePreOffer","data","callerSocketId","callerUsername","CALL_REQUESTED"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,uBAAxC,EAAiEC,YAAjE,EAA+EC,cAA/E,QAAqG,iCAArG;AACA,OAAO,KAAKC,GAAZ,MAAqB,gCAArB;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,IADe;AAEtBC,EAAAA,KAAK,EAAE;AAFe,CAA1B;AAKA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChCC,EAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCN,iBAApC,EACCO,IADD,CACMC,MAAM,IAAI;AACZf,IAAAA,KAAK,CAACgB,QAAN,CAAeX,cAAc,CAACU,MAAD,CAA7B;AACAf,IAAAA,KAAK,CAACgB,QAAN,CAAeZ,YAAY,CAACH,UAAU,CAACgB,cAAZ,CAA3B;AACH,GAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,6DAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GARD;AASH,CAVM;AAaP,IAAIG,qBAAJ;AAEA,OAAO,MAAMC,eAAe,GAAIC,aAAD,IAAmB;AAC9CF,EAAAA,qBAAqB,GAAGE,aAAa,CAACC,QAAtC;AACAzB,EAAAA,KAAK,CAACgB,QAAN,CAAeZ,YAAY,CAACH,UAAU,CAACyB,gBAAZ,CAA3B;AACA1B,EAAAA,KAAK,CAACgB,QAAN,CAAeb,uBAAuB,CAAC,IAAD,CAAtC;AACAG,EAAAA,GAAG,CAACqB,YAAJ,CAAiB;AACbC,IAAAA,MAAM,EAAEJ,aADK;AAEbK,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE9B,KAAK,CAAC+B,QAAN,GAAiBC,SAAjB,CAA2BF;AADjC;AAFK,GAAjB;AAMH,CAVM;AAYP,OAAO,MAAMG,cAAc,GAAIC,IAAD,IAAU;AACpCZ,EAAAA,qBAAqB,GAAGY,IAAI,CAACC,cAA7B;AACAnC,EAAAA,KAAK,CAACgB,QAAN,CAAed,iBAAiB,CAACgC,IAAI,CAACE,cAAN,CAAhC;AACApC,EAAAA,KAAK,CAACgB,QAAN,CAAeZ,YAAY,CAACH,UAAU,CAACoC,cAAZ,CAA3B;AACH,CAJM","sourcesContent":["import store from '../../store/store';\r\nimport { callStates, setCallerUsername, setCallingDialogVisible, setCallState, setLocalStream } from \"../../store/actions/callActions\";\r\nimport * as wss from '../wssConnection/wssConnection';\r\n\r\nconst defaultConstrains = {\r\n    video: true,\r\n    audio: true\r\n};\r\n\r\nexport const getLocalStream = () => {\r\n    navigator.mediaDevices.getUserMedia(defaultConstrains)\r\n    .then(stream => {\r\n        store.dispatch(setLocalStream(stream));\r\n        store.dispatch(setCallState(callStates.CALL_AVAILABLE));\r\n    })\r\n    .catch(err => {\r\n        console.log('error occured when trying to get access to get local stream');\r\n        console.log(err);\r\n    });\r\n}\r\n;\r\n\r\nlet connectedUserSocketId;\r\n\r\nexport const callToOtherUser = (calleeDetails) => {\r\n    connectedUserSocketId = calleeDetails.socketId;\r\n    store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\r\n    store.dispatch(setCallingDialogVisible(true));\r\n    wss.sendPreOffer({\r\n        callee: calleeDetails,\r\n        caller: {\r\n            username: store.getState().dashboard.username\r\n        }\r\n    });\r\n};\r\n\r\nexport const handlePreOffer = (data) => {\r\n    connectedUserSocketId = data.callerSocketId;\r\n    store.dispatch(setCallerUsername(data.callerUsername));\r\n    store.dispatch(setCallState(callStates.CALL_REQUESTED));\r\n}"]},"metadata":{},"sourceType":"module"}