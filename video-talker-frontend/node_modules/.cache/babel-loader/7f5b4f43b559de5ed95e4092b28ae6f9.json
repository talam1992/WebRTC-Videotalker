{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Timothy Lam\\\\Documents\\\\GitHub\\\\WebRTC-Videotalker\\\\video-talker-frontend\\\\src\\\\Dashboard\\\\components\\\\RemoteVideoView\\\\RemoteVideoView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  videoContainer: {\n    width: '100%',\n    height: '100%'\n  },\n  videoElement: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst RemoteVideoView = props => {\n  _s();\n\n  const {\n    remoteStream\n  } = props;\n  const remoteVideoRef = useRef();\n  useEffect(() => {\n    if (remoteStream) {\n      const remoteVideo = remoteVideoRef.current;\n      remoteVideo.srcObject = remoteStream;\n\n      remoteVideo.onloadedmetadata = () => {\n        remoteVideo.play();\n      };\n    }\n  }, [remoteStream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.videoContainer,\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      style: styles.videoElement,\n      ref: remoteVideoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RemoteVideoView, \"ZGBB4g5jJPO2ACcyUYACJAVisSQ=\");\n\n_c = RemoteVideoView;\nexport default RemoteVideoView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoteVideoView\");","map":{"version":3,"sources":["C:/Users/Timothy Lam/Documents/GitHub/WebRTC-Videotalker/video-talker-frontend/src/Dashboard/components/RemoteVideoView/RemoteVideoView.js"],"names":["React","useRef","useEffect","styles","videoContainer","width","height","videoElement","RemoteVideoView","props","remoteStream","remoteVideoRef","remoteVideo","current","srcObject","onloadedmetadata","play"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAE,MADK;AAEZC,IAAAA,MAAM,EAAE;AAFI,GADL;AAKXC,EAAAA,YAAY,EAAE;AACVF,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,MAAM,EAAE;AAFE;AALH,CAAf;;AAWA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AACA,QAAME,cAAc,GAAGV,MAAM,EAA7B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,YAAJ,EAAkB;AACd,YAAOE,WAAW,GAAGD,cAAc,CAACE,OAApC;AACAD,MAAAA,WAAW,CAACE,SAAZ,GAAwBJ,YAAxB;;AAEAE,MAAAA,WAAW,CAACG,gBAAZ,GAA+B,MAAM;AACjCH,QAAAA,WAAW,CAACI,IAAZ;AACH,OAFD;AAGH;AACJ,GATQ,EASN,CAACN,YAAD,CATM,CAAT;AAYA,sBACI;AAAK,IAAA,KAAK,EAAEP,MAAM,CAACC,cAAnB;AAAA,2BACI;AAAO,MAAA,KAAK,EAAED,MAAM,CAACI,YAArB;AAAmC,MAAA,GAAG,EAAEI,cAAxC;AAAwD,MAAA,QAAQ,MAAhE;AAAiE,MAAA,KAAK;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;GAAMH,e;;KAAAA,e;AAuBN,eAAeA,eAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst styles = {\r\n    videoContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    videoElement: {\r\n        width: '100%',\r\n        height: '100%'\r\n    }\r\n};\r\n\r\nconst RemoteVideoView = props => {\r\n    const { remoteStream } = props;\r\n    const remoteVideoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (remoteStream) {\r\n            const  remoteVideo = remoteVideoRef.current;\r\n            remoteVideo.srcObject = remoteStream;\r\n\r\n            remoteVideo.onloadedmetadata = () => {\r\n                remoteVideo.play();\r\n            };\r\n        }\r\n    }, [remoteStream]);\r\n    \r\n    \r\n    return (\r\n        <div style={styles.videoContainer} >\r\n            <video style={styles.videoElement} ref={remoteVideoRef} autoPlay muted ></video>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RemoteVideoView;"]},"metadata":{},"sourceType":"module"}