{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Timothy Lam\\\\Documents\\\\GitHub\\\\WebRTC-Videotalker\\\\video-talker-frontend\\\\src\\\\Dashboard\\\\components\\\\LocalVideoView\\\\LocalVideoView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  videoContainer: {\n    width: '150px',\n    height: '150px',\n    borderRadius: '8px',\n    position: 'absolute',\n    top: '5%',\n    right: '23%'\n  },\n  videoElement: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst LocalVideoView = props => {\n  _s();\n\n  const {\n    localStream\n  } = props;\n  const localVideoRef = useRef();\n  useEffect(() => {\n    if (localStream) {\n      const localVideo = localVideoRef.current;\n      localVideo.srcObject = localStream;\n\n      localVideo.onloadedmetadata = () => {\n        localVideo.play();\n      };\n    }\n  }, [localStream]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.videoContainer,\n    className: \"background_secondary_color\",\n    children: /*#__PURE__*/_jsxDEV(\"vido\", {\n      style: styles.videoElement,\n      ref: localVideoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LocalVideoView, \"qfQ4/GJUb67BmCVICsZAv8UZPjg=\");\n\n_c = LocalVideoView;\nexport default LocalVideoView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalVideoView\");","map":{"version":3,"sources":["C:/Users/Timothy Lam/Documents/GitHub/WebRTC-Videotalker/video-talker-frontend/src/Dashboard/components/LocalVideoView/LocalVideoView.js"],"names":["React","useRef","useEffect","styles","videoContainer","width","height","borderRadius","position","top","right","videoElement","LocalVideoView","props","localStream","localVideoRef","localVideo","current","srcObject","onloadedmetadata","play"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAE,OADK;AAEZC,IAAAA,MAAM,EAAE,OAFI;AAGZC,IAAAA,YAAY,EAAE,KAHF;AAIZC,IAAAA,QAAQ,EAAE,UAJE;AAKZC,IAAAA,GAAG,EAAE,IALO;AAMZC,IAAAA,KAAK,EAAE;AANK,GADL;AASXC,EAAAA,YAAY,EAAE;AACVN,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,MAAM,EAAE;AAFE;AATH,CAAf;;AAeA,MAAMM,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAME,aAAa,GAAGd,MAAM,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,WAAJ,EAAiB;AACb,YAAOE,UAAU,GAAGD,aAAa,CAACE,OAAlC;AACAD,MAAAA,UAAU,CAACE,SAAX,GAAuBJ,WAAvB;;AAEAE,MAAAA,UAAU,CAACG,gBAAX,GAA8B,MAAM;AAChCH,QAAAA,UAAU,CAACI,IAAX;AACH,OAFD;AAGH;AACJ,GATQ,EASN,CAACN,WAAD,CATM,CAAT;AAYA,sBACI;AAAK,IAAA,KAAK,EAAEX,MAAM,CAACC,cAAnB;AAAmC,IAAA,SAAS,EAAC,4BAA7C;AAAA,2BACI;AAAM,MAAA,KAAK,EAAED,MAAM,CAACQ,YAApB;AAAkC,MAAA,GAAG,EAAEI,aAAvC;AAAsD,MAAA,QAAQ,MAA9D;AAA+D,MAAA,KAAK;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;GAAMH,c;;KAAAA,c;AAuBN,eAAeA,cAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst styles = {\r\n    videoContainer: {\r\n        width: '150px',\r\n        height: '150px',\r\n        borderRadius: '8px',\r\n        position: 'absolute',\r\n        top: '5%',\r\n        right: '23%'\r\n    },\r\n    videoElement: {\r\n        width: '100%',\r\n        height: '100%'\r\n    }\r\n};\r\n\r\nconst LocalVideoView = props => {\r\n    const { localStream } = props;\r\n    const localVideoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (localStream) {\r\n            const  localVideo = localVideoRef.current;\r\n            localVideo.srcObject = localStream;\r\n\r\n            localVideo.onloadedmetadata = () => {\r\n                localVideo.play();\r\n            };\r\n        }\r\n    }, [localStream]);\r\n    \r\n    \r\n    return (\r\n        <div style={styles.videoContainer} className='background_secondary_color'>\r\n            <vido style={styles.videoElement} ref={localVideoRef} autoPlay muted ></vido>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocalVideoView;"]},"metadata":{},"sourceType":"module"}