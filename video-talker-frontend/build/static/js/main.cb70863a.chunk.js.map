{"version":3,"sources":["utils/webRTC/webRTCHandler.js","utils/wssConnection/wssConnection.js","store/actions/dashboardActions.js","store/reducers/dashboardReducer.js","store/actions/callActions.js","store/reducers/callReducer.js","store/reducer.js","store/store.js","resources/logo.png","resources/userAvatar.png","Dashboard/components/ActiveUsersList/ActiveUsersListItem.js","Dashboard/components/ActiveUsersList/ActiveUsersList.js","Dashboard/components/LocalVideoView/LocalVideoView.js","Dashboard/components/RemoteVideoView/RemoteVideoView.js","Dashboard/components/CallRejectedDialog/CallRejectedDialog.js","Dashboard/components/IncomingCallDialog/IncomingCallDialog.js","Dashboard/components/CallingDialog/CallingDialog.js","Dashboard/components/ConversationButtons/ConversationButton.js","Dashboard/components/ConversationButtons/ConversationButtons.js","Dashboard/components/DirectCall/DirectCall.js","Dashboard/components/DashboardInformation/DashboardInformation.js","Dashboard/components/GroupCallRoomsList/GroupCallRoomsListItem.js","Dashboard/components/GroupCallRoomsList/GroupCallRoomsList.js","Dashboard/Dashboard.js","utils/webRTC/webRTCGroupCallHandler.js","LoginPage/components/UsernameInput.js","LoginPage/components/SubmitButton.js","LoginPage/LoginPage.js","App.js","index.js"],"names":["connectedUserSocketId","peerConnection","screenSharingStream","socket","DASHBOARD_SET_USERNAME","DASHBOARD_SET_ACTIVE_USERS","initState","username","activeUsers","reducer","state","action","type","dashboardActions","callStates","CALL_SET_LOCAL_STREAM","CALL_SET_CALL_STATE","CALL_SET_CALLING_DIALOG_VISIBLE","CALL_SET_CALLER_USERNAME","CALL_SET_CALL_REJECTED","CALL_SET_REMOTE_STREAM","CALL_SET_LOCAL_MICROPHONE_ENABLED","CALL_SET_LOCAL_CAMERA_ENABLED","CALL_SET_SCREEN_SHARING_ACTIVE","CALL_RESET_CALL_DATA","setCallState","callState","setCallingDialogVisible","visible","setCallRejected","callRejectedDetails","callRejected","rejected","reason","setScreenSharingActive","active","localStream","callingDialogVisible","callerUsername","remoteStream","localCameraEnabled","localMicrophoneEnabled","screenSharingActive","callActions","enabled","combineReducers","dashboard","dashboardReducer","call","callReducer","store","createStore","mainReducer","composeWithDevTools","preOfferAnswers","defaultConstrains","video","audio","configuration","iceServers","urls","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","dispatch","createPeerConnection","catch","err","console","log","RTCPeerConnection","getState","getTracks","track","addTrack","ontrack","streams","onicecandidate","event","candidate","wss","onconnectionstatechange","connectionState","handlePreOffer","data","checkIfCallIsPossible","callerSocketId","answer","sendOffer","a","createOffer","offer","setLocalDescription","calleeSocketId","handleOffer","setRemoteDescription","createAnswer","handleAnswer","handleCandidate","addIceCandidate","error","switchForScreenSharingStream","getDisplayMedia","senders","getSenders","find","sender","kind","getVideoTracks","replaceTrack","forEach","stop","hangUp","resetCallDataAfterHangUp","close","resetCallData","getAudioTracks","broadcastEventTypes","connectWithWebSocket","socketClient","on","id","handleBroadcastEvents","webRTCHandler","rejectionReason","sendPreOffer","emit","sendPreOfferAnswer","sendWebRTCOffer","sendWebRTCAnswer","sendWebRTCCandidate","sendUserHangedUp","filter","activeUser","socketId","ActiveUsersListItem","props","className","onClick","calleeDetails","callee","caller","src","userAvatar","connect","map","styles","videoContainer","width","height","borderRadius","position","top","right","videoElement","LocalVideoView","localVideoRef","useRef","useEffect","localVideo","current","srcObject","onloadedmetadata","play","style","ref","autoPlay","muted","RemoteVideoView","remoteVideoRef","remoteVideo","CallRejectedDialog","hideCallRejectedDialog","setTimeout","IncomingCallDialog","buttonContainer","marginTop","border","display","alignItems","justifyContent","CallingDialog","fill","button","textDecoration","backgroundColor","marginLeft","boxShadow","borderImage","borderStyle","borderWidth","outline","ConversationButton","onClickHandler","children","bottom","left","icon","ConversationButtons","setCameraEnabled","setMicrophoneEnabled","micEnabled","cameraEnabled","setLocalCameraEnabled","setLocalMicrophoneEnabled","DashboardInformation","GroupCallRoomsListItem","room","hostName","dummyList","roomId","GroupCallRoomsList","window","Peer","undefined","path","host","port","logo","UsernameInput","setUsername","placeholder","value","onChange","target","SubmitButton","handleSubmitButtonPressed","saveUsername","useState","history","useHistory","alt","registerNewUser","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb70863a.chunk.js","sourcesContent":["import store from '../../store/store';\r\nimport { resetCallDataState, setLocalStream, setCallState, callStates, setCallingDialogVisible, setCallerUsername, setCallRejected, setRemoteStream, setScreenSharingActive } from '../../store/actions/callActions';\r\nimport * as wss from '../wssConnection/wssConnection';\r\n\r\nconst preOfferAnswers = {\r\n  CALL_ACCEPTED: 'CALL_ACCEPTED',\r\n  CALL_REJECTED: 'CALL_REJECTED',\r\n  CALL_NOT_AVAILABLE: 'CALL_NOT_AVAILABLE'\r\n};\r\n\r\nconst defaultConstrains = {\r\n  video: true,\r\n  audio: true\r\n};\r\n\r\nconst configuration = {\r\n  iceServers: [{\r\n    urls: 'stun:stun.l.google.com:13902'\r\n  }]\r\n};\r\n\r\nlet connectedUserSocketId;\r\nlet peerConnection;\r\n\r\nexport const getLocalStream = () => {\r\n  navigator.mediaDevices.getUserMedia(defaultConstrains)\r\n    .then(stream => {\r\n      store.dispatch(setLocalStream(stream));\r\n      store.dispatch(setCallState(callStates.CALL_AVAILABLE));\r\n      createPeerConnection();\r\n    })\r\n    .catch(err => {\r\n      console.log('error occured when trying to get an access to get local stream');\r\n      console.log(err);\r\n    });\r\n}\r\n;\r\n\r\nconst createPeerConnection = () => {\r\n  peerConnection = new RTCPeerConnection(configuration);\r\n\r\n  const localStream = store.getState().call.localStream;\r\n\r\n  for (const track of localStream.getTracks()) {\r\n    peerConnection.addTrack(track, localStream);\r\n  }\r\n\r\n  peerConnection.ontrack = ({ streams: [stream] }) => {\r\n    store.dispatch(setRemoteStream(stream));\r\n  };\r\n\r\n  peerConnection.onicecandidate = (event) => {\r\n    console.log('geeting candidates from stun server');\r\n    if (event.candidate) {\r\n      wss.sendWebRTCCandidate({\r\n        candidate: event.candidate,\r\n        connectedUserSocketId: connectedUserSocketId\r\n      });\r\n    }\r\n  };\r\n\r\n  peerConnection.onconnectionstatechange = (event) => {\r\n    if (peerConnection.connectionState === 'connected') {\r\n      console.log('succesfully connected with other peer');\r\n    }\r\n  };\r\n};\r\n\r\nexport const callToOtherUser = (calleeDetails) => {\r\n  connectedUserSocketId = calleeDetails.socketId;\r\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\r\n  store.dispatch(setCallingDialogVisible(true));\r\n  wss.sendPreOffer({\r\n    callee: calleeDetails,\r\n    caller: {\r\n      username: store.getState().dashboard.username\r\n    }\r\n  });\r\n};\r\n\r\nexport const handlePreOffer = (data) => {\r\n  if (checkIfCallIsPossible()) {\r\n    connectedUserSocketId = data.callerSocketId;\r\n    store.dispatch(setCallerUsername(data.callerUsername));\r\n    store.dispatch(setCallState(callStates.CALL_REQUESTED));\r\n  } else {\r\n    wss.sendPreOfferAnswer({\r\n      callerSocketId: data.callerSocketId,\r\n      answer: preOfferAnswers.CALL_NOT_AVAILABLE\r\n    });\r\n  }\r\n};\r\n\r\nexport const acceptIncomingCallRequest = () => {\r\n  wss.sendPreOfferAnswer({\r\n    callerSocketId: connectedUserSocketId,\r\n    answer: preOfferAnswers.CALL_ACCEPTED\r\n  });\r\n\r\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\r\n};\r\n\r\nexport const rejectIncomingCallRequest = () => {\r\n  wss.sendPreOfferAnswer({\r\n    callerSocketId: connectedUserSocketId,\r\n    answer: preOfferAnswers.CALL_REJECTED\r\n  });\r\n  resetCallData();\r\n};\r\n\r\nexport const handlePreOfferAnswer = (data) => {\r\n  store.dispatch(setCallingDialogVisible(false));\r\n\r\n  if (data.answer === preOfferAnswers.CALL_ACCEPTED) {\r\n    sendOffer();\r\n  } else {\r\n    let rejectionReason;\r\n    if (data.answer === preOfferAnswers.CALL_NOT_AVAILABLE) {\r\n      rejectionReason = 'Callee is not able to pick up the call right now';\r\n    } else {\r\n      rejectionReason = 'Call rejected by the callee';\r\n    }\r\n    store.dispatch(setCallRejected({\r\n      rejected: true,\r\n      reason: rejectionReason\r\n    }));\r\n\r\n    resetCallData();\r\n  }\r\n};\r\n\r\nconst sendOffer = async () => {\r\n  const offer = await peerConnection.createOffer();\r\n  await peerConnection.setLocalDescription(offer);\r\n  wss.sendWebRTCOffer({\r\n    calleeSocketId: connectedUserSocketId,\r\n    offer: offer\r\n  });\r\n};\r\n\r\nexport const handleOffer = async (data) => {\r\n  await peerConnection.setRemoteDescription(data.offer);\r\n  const answer = await peerConnection.createAnswer();\r\n  await peerConnection.setLocalDescription(answer);\r\n  wss.sendWebRTCAnswer({\r\n    callerSocketId: connectedUserSocketId,\r\n    answer: answer\r\n  });\r\n};\r\n\r\nexport const handleAnswer = async (data) => {\r\n  await peerConnection.setRemoteDescription(data.answer);\r\n};\r\n\r\nexport const handleCandidate = async (data) => {\r\n  try {\r\n    console.log('adding ice candidates');\r\n    await peerConnection.addIceCandidate(data.candidate);\r\n  } catch (err) {\r\n    console.error('error occured when trying to add received ice candidate', err);\r\n  }\r\n};\r\n\r\nexport const checkIfCallIsPossible = () => {\r\n  if (store.getState().call.localStream === null ||\r\n  store.getState().call.callState !== callStates.CALL_AVAILABLE) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nlet screenSharingStream;\r\n\r\nexport const switchForScreenSharingStream = async () => {\r\n  if (!store.getState().call.screenSharingActive) {\r\n    try {\r\n      screenSharingStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n      store.dispatch(setScreenSharingActive(true));\r\n      const senders = peerConnection.getSenders();\r\n      const sender = senders.find(sender => sender.track.kind == screenSharingStream.getVideoTracks()[0].kind);\r\n      sender.replaceTrack(screenSharingStream.getVideoTracks()[0]);\r\n    } catch (err) {\r\n      console.error('error occured when trying to get screen sharing stream', err);\r\n    }\r\n  } else {\r\n    const localStream = store.getState().call.localStream;\r\n    const senders = peerConnection.getSenders();\r\n    const sender = senders.find(sender => sender.track.kind == localStream.getVideoTracks()[0].kind);\r\n    sender.replaceTrack(localStream.getVideoTracks()[0]);\r\n    store.dispatch(setScreenSharingActive(false));\r\n    screenSharingStream.getTracks().forEach(track => track.stop());\r\n  }\r\n}\r\n;\r\n\r\nexport const handleUserHangedUp = () => {\r\n  resetCallDataAfterHangUp();\r\n};\r\n\r\nexport const hangUp = () => {\r\n  wss.sendUserHangedUp({\r\n    connectedUserSocketId: connectedUserSocketId\r\n  });\r\n\r\n  resetCallDataAfterHangUp();\r\n};\r\n\r\nconst resetCallDataAfterHangUp = () => {\r\n\r\n  if (store.getState().call.screenSharingActive) {\r\n    screenSharingStream.getTracks().forEach(track => {\r\n      track.stop();\r\n    });\r\n  }\r\n\r\n  store.dispatch(resetCallDataState());\r\n  peerConnection.close();\r\n  peerConnection = null;\r\n  createPeerConnection();\r\n  resetCallData();\r\n\r\n  const localStream = store.getState().call.localStream;\r\n\r\n  localStream.getVideoTracks()[0].enabled = true;\r\n  localStream.getAudioTracks()[0].enabled = true;\r\n\r\n};\r\n\r\nexport const resetCallData = () => {\r\n  connectedUserSocketId = null;\r\n  store.dispatch(setCallState(callStates.CALL_AVAILABLE));\r\n};\r\n","import socketClient from 'socket.io-client';\nimport store from '../../store/store';\nimport * as dashboardActions from '../../store/actions/dashboardActions';\nimport * as webRTCHandler from '../webRTC/webRTCHandler';\n\nconst SERVER = 'http://localhost:5000';\n\nconst broadcastEventTypes = {\n  ACTIVE_USERS: 'ACTIVE_USERS',\n  GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\n};\n\nlet socket;\n\nexport const connectWithWebSocket = () => {\n  socket = socketClient(SERVER);\n\n  socket.on('connection', () => {\n    console.log('succesfully connected with wss server');\n    console.log(socket.id);\n  });\n\n  socket.on('broadcast', (data) => {\n    handleBroadcastEvents(data);\n  });\n\n  // listeners related with direct call\n  socket.on('pre-offer', (data) => {\n    webRTCHandler.handlePreOffer(data);\n  });\n\n  socket.on('pre-offer-answer', (data) => {\n    webRTCHandler.handlePreOfferAnswer(data);\n  });\n\n  socket.on('webRTC-offer', (data) => {\n    webRTCHandler.handleOffer(data);\n  });\n\n  socket.on('webRTC-answer', (data) => {\n    webRTCHandler.handleAnswer(data);\n  });\n\n  socket.on('webRTC-candidate', (data) => {\n    webRTCHandler.handleCandidate(data);\n  });\n\n  socket.on('user-hanged-up', () => {\n    webRTCHandler.handleUserHangedUp();\n  });\n};\n\nexport const registerNewUser = (username) => {\n  socket.emit('register-new-user', {\n    username: username,\n    socketId: socket.id\n  });\n};\n\n// emitting events to server related with direct call\n\nexport const sendPreOffer = (data) => {\n  socket.emit('pre-offer', data);\n};\n\nexport const sendPreOfferAnswer = (data) => {\n  socket.emit('pre-offer-answer', data);\n};\n\nexport const sendWebRTCOffer = (data) => {\n  socket.emit('webRTC-offer', data);\n};\n\nexport const sendWebRTCAnswer = (data) => {\n  socket.emit('webRTC-answer', data);\n};\n\nexport const sendWebRTCCandidate = (data) => {\n  socket.emit('webRTC-candidate', data);\n};\n\nexport const sendUserHangedUp = (data) => {\n  socket.emit('user-hanged-up', data);\n};\n\nconst handleBroadcastEvents = (data) => {\n  switch (data.event) {\n    case broadcastEventTypes.ACTIVE_USERS:\n      const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\n      store.dispatch(dashboardActions.setActiveUsers(activeUsers));\n      break;\n    default:\n      break;\n  }\n}\n;\n","export const DASHBOARD_SET_USERNAME = 'DASHBOARD.SET_USERNAME';\nexport const DASHBOARD_SET_ACTIVE_USERS = 'DASHBOARD.SET_ACTIVE_USERS';\n\nexport const setUsername = (username) => {\n  return {\n    type: DASHBOARD_SET_USERNAME,\n    username\n  };\n}\n;\n\nexport const setActiveUsers = (activeUsers) => {\n  return {\n    type: DASHBOARD_SET_ACTIVE_USERS,\n    activeUsers\n  };\n}\n;","import * as dashboardActions from '../actions/dashboardActions';\n\nconst initState = {\n  username: '',\n  activeUsers: []\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case dashboardActions.DASHBOARD_SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case dashboardActions.DASHBOARD_SET_ACTIVE_USERS:\n      return {\n        ...state,\n        activeUsers: action.activeUsers\n      };\n    default:\n      return state;\n  }\n}\n;\n\nexport default reducer;\n","export const callStates = {\r\n  CALL_UNAVAILABLE: 'CALL_UNAVAILABLE',\r\n  CALL_AVAILABLE: 'CALL_AVAILABLE',\r\n  CALL_REQUESTED: 'CALL_REQUESTED',\r\n  CALL_IN_PROGRESS: 'CALL_IN_PROGRESS'\r\n};\r\n\r\nexport const CALL_SET_LOCAL_STREAM = 'CALL.SET_LOCAL_STREAM';\r\nexport const CALL_SET_CALL_STATE = 'CALL.SET_CALL_STATE';\r\nexport const CALL_SET_CALLING_DIALOG_VISIBLE = 'CALL.SET_CALLING_DIALOG_VISIBLE';\r\nexport const CALL_SET_CALLER_USERNAME = 'CALL.SET_CALLER_USERNAME';\r\nexport const CALL_SET_CALL_REJECTED = 'CALL.SET_CALL_REJECTED';\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL.SET_REMOTE_STREAM';\r\nexport const CALL_SET_LOCAL_MICROPHONE_ENABLED = 'CALL.SET_LOCAL_MICROPHONE_ENABLED';\r\nexport const CALL_SET_LOCAL_CAMERA_ENABLED = 'CALL.SET_LOCAL_CAMERA_ENABLED';\r\nexport const CALL_SET_SCREEN_SHARING_ACTIVE = 'CALL.SET_SCREEN_SHARING_ACTIVE';\r\nexport const CALL_RESET_CALL_DATA = \"CALL.RESET_ALL_CALL_DATA\";\r\n\r\nexport const setLocalStream = (localStream) => {\r\n  return {\r\n    type: CALL_SET_LOCAL_STREAM,\r\n    localStream\r\n  };\r\n}\r\n;\r\n\r\nexport const setCallState = (callState) => {\r\n  return {\r\n    type: CALL_SET_CALL_STATE,\r\n    callState\r\n  };\r\n};\r\n\r\nexport const setCallingDialogVisible = (visible) => {\r\n  return {\r\n    type: CALL_SET_CALLING_DIALOG_VISIBLE,\r\n    visible\r\n  };\r\n};\r\n\r\nexport const setCallerUsername = (callerUsername) => {\r\n  return {\r\n    type: CALL_SET_CALLER_USERNAME,\r\n    callerUsername\r\n  };\r\n}\r\n;\r\n\r\nexport const setCallRejected = (callRejectedDetails) => {\r\n  return {\r\n    type: CALL_SET_CALL_REJECTED,\r\n    callRejected: {\r\n      rejected: callRejectedDetails.rejected,\r\n      reason: callRejectedDetails.reason\r\n    }\r\n  };\r\n};\r\n\r\nexport const setRemoteStream = (remoteStream) => {\r\n  return {\r\n    type: CALL_SET_REMOTE_STREAM,\r\n    remoteStream\r\n  };\r\n}\r\n;\r\n\r\nexport const setLocalMicrophoneEnabled = (enabled) => {\r\n  return {\r\n    type: CALL_SET_LOCAL_MICROPHONE_ENABLED,\r\n    enabled\r\n  };\r\n};\r\n\r\nexport const setLocalCameraEnabled = (enabled) => {\r\n  return {\r\n    type: CALL_SET_LOCAL_CAMERA_ENABLED,\r\n    enabled\r\n  };\r\n};\r\n\r\nexport const setScreenSharingActive = (active) => {\r\n  return {\r\n    type: CALL_SET_SCREEN_SHARING_ACTIVE,\r\n    active\r\n  };\r\n}\r\n;\r\n\r\nexport const resetCallDataState = () => {\r\n  return {\r\n    type: CALL_RESET_CALL_DATA\r\n  };\r\n};\r\n","import * as callActions from '../actions/callActions';\r\n\r\nconst initState = {\r\n  localStream: null,\r\n  callState: callActions.callStates.CALL_UNAVAILABLE,\r\n  callingDialogVisible: false,\r\n  callerUsername: '',\r\n  callRejected: {\r\n    rejected: false,\r\n    reason: ''\r\n  },\r\n  remoteStream: null,\r\n  localCameraEnabled: true,\r\n  localMicrophoneEnabled: true,\r\n  screenSharingActive: false\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case callActions.CALL_SET_LOCAL_STREAM:\r\n      return {\r\n        ...state,\r\n        localStream: action.localStream\r\n      };\r\n    case callActions.CALL_SET_CALL_STATE:\r\n      return {\r\n        ...state,\r\n        callState: action.callState\r\n      };\r\n    case callActions.CALL_SET_CALLING_DIALOG_VISIBLE:\r\n      return {\r\n        ...state,\r\n        callingDialogVisible: action.visible\r\n      };\r\n    case callActions.CALL_SET_CALLER_USERNAME:\r\n      return {\r\n        ...state,\r\n        callerUsername: action.callerUsername\r\n      };\r\n    case callActions.CALL_SET_CALL_REJECTED:\r\n      return {\r\n        ...state,\r\n        callRejected: action.callRejected\r\n      };\r\n    case callActions.CALL_SET_REMOTE_STREAM:\r\n      return {\r\n        ...state,\r\n        remoteStream: action.remoteStream\r\n      };\r\n    case callActions.CALL_SET_LOCAL_CAMERA_ENABLED:\r\n      return {\r\n        ...state,\r\n        localCameraEnabled: action.enabled\r\n      };\r\n    case callActions.CALL_SET_LOCAL_MICROPHONE_ENABLED:\r\n      return {\r\n        ...state,\r\n        localMicrophoneEnabled: action.enabled\r\n      };\r\n    case callActions.CALL_SET_SCREEN_SHARING_ACTIVE:\r\n      return {\r\n        ...state,\r\n        screenSharingActive: action.active\r\n      };\r\n    case callActions.CALL_RESET_CALL_DATA:\r\n      return {\r\n        ...state,\r\n        remoteStream: null,\r\n        screenSharingActive: false,\r\n        callerUsername: '',\r\n        localMicrophoneEnabled: true,\r\n        localCameraEnabled: true,\r\n        callingDialogVisible: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n;\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\nimport dashboardReducer from './reducers/dashboardReducer';\nimport callReducer from './reducers/callReducer';\n\nexport default combineReducers({\n  dashboard: dashboardReducer,\n  call: callReducer\n});\n","import { createStore } from 'redux';\nimport mainReducer from './reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  mainReducer,\n  composeWithDevTools()\n);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/logo.d549b294.png\";","export default __webpack_public_path__ + \"static/media/userAvatar.a6143582.png\";","import React from 'react';\nimport userAvatar from '../../../resources/userAvatar.png';\nimport { callStates } from '../../../store/actions/callActions';\nimport { callToOtherUser } from '../../../utils/webRTC/webRTCHandler';\n\nconst ActiveUsersListItem = (props) => {\n  const { activeUser, callState } = props;\n\n  const handleListItemPressed = () => {\n    if (callState === callStates.CALL_AVAILABLE) {\n      callToOtherUser(activeUser);\n    }\n  };\n\n  console.log(activeUser);\n\n  return (\n    <div className='active_user_list_item' onClick={handleListItemPressed}>\n      <div className='active_user_list_image_container'>\n        <img className='active_user_list_image' src={userAvatar} />\n      </div>\n      <span className='active_user_list_text'>{activeUser.username}</span>\n    </div>\n  );\n};\n\nexport default ActiveUsersListItem;\n","import React from 'react';\nimport ActiveUsersListItem from './ActiveUsersListItem';\nimport { connect } from 'react-redux';\n\nimport './ActiveUsersList.css';\n\nconst ActiveUsersList = (props) => {\n  const { activeUsers, callState } = props\n  return (\n    <div className='active_user_list_container'>\n      {activeUsers.map((activeUser) =>\n        <ActiveUsersListItem\n          key={activeUser.socketId}\n          activeUser={activeUser}\n          callState={callState}\n        />)}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ dashboard, call }) => ({\n  ...dashboard,\n  ...call\n});\n\nexport default connect(mapStateToProps)(ActiveUsersList);\n","import React, { useRef, useEffect } from 'react';\r\n\r\nconst styles = {\r\n    videoContainer: {\r\n        width: '150px',\r\n        height: '150px',\r\n        borderRadius: '8px',\r\n        position: 'absolute',\r\n        top: '5%',\r\n        right: '23%'\r\n    },\r\n    videoElement: {\r\n        width: '100%',\r\n        height: '100%'\r\n    }\r\n};\r\n\r\nconst LocalVideoView = props => {\r\n    const { localStream } = props;\r\n    const localVideoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (localStream) {\r\n            const  localVideo = localVideoRef.current;\r\n            localVideo.srcObject = localStream;\r\n\r\n            localVideo.onloadedmetadata = () => {\r\n                localVideo.play();\r\n            };\r\n        }\r\n    }, [localStream]);\r\n    \r\n    \r\n    return (\r\n        <div style={styles.videoContainer} className='background_secondary_color'>\r\n            <video style={styles.videoElement} ref={localVideoRef} autoPlay muted ></video>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocalVideoView;","import React, { useRef, useEffect } from 'react';\r\n\r\nconst styles = {\r\n    videoContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    videoElement: {\r\n        width: '100%',\r\n        height: '100%'\r\n    }\r\n};\r\n\r\nconst RemoteVideoView = props => {\r\n    const { remoteStream } = props;\r\n    const remoteVideoRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (remoteStream) {\r\n            const  remoteVideo = remoteVideoRef.current;\r\n            remoteVideo.srcObject = remoteStream;\r\n\r\n            remoteVideo.onloadedmetadata = () => {\r\n                remoteVideo.play();\r\n            };\r\n        }\r\n    }, [remoteStream]);\r\n    \r\n    \r\n    return (\r\n        <div style={styles.videoContainer} >\r\n            <video style={styles.videoElement} ref={remoteVideoRef} autoPlay muted ></video>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RemoteVideoView;","import React, { useEffect } from 'react';\r\n\r\nimport './CallRejectedDialog.css';\r\n\r\nconst CallRejectedDialog = ({ reason, hideCallRejectedDialog }) => {\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            hideCallRejectedDialog({\r\n                rejected: false,\r\n                reason: ''\r\n            });\r\n        }, [4000]);\r\n    }, []);\r\n    \r\n    \r\n    return (\r\n        <div className='call_rejected_dialog background_secondary_color'>\r\n            <span>\r\n                {reason}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CallRejectedDialog;","import React from 'react';\r\nimport { acceptIncomingCallRequest, rejectIncomingCallRequest } from '../../../utils/webRTC/webRTCHandler';\r\n\r\nimport './IncomingCallDialog.css';\r\n\r\nconst IncomingCallDialog = ({ callerUsername }) => {\r\n  const handleAcceptButtonPressed = () => {\r\n    acceptIncomingCallRequest();\r\n  };\r\n\r\n  const handleRejectButtonPressed = () => {\r\n    rejectIncomingCallRequest();\r\n  };\r\n\r\n  return (\r\n    <div className='direct_call_dialog background_secondary_color'>\r\n      <span className='direct_call_dialog_caller_name'>{callerUsername}</span>\r\n      <div className='direct_call_dialog_button_container'>\r\n        <button className='direct_call_dialog_accept_button' onClick={handleAcceptButtonPressed}>\r\n          Accept\r\n        </button>\r\n        <button className='direct_call_dialog_reject_button' onClick={handleRejectButtonPressed}>\r\n          Reject\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomingCallDialog;\r\n","import React from 'react';\r\nimport './CallingDialog.css';\r\nimport { hangUp } from '../../../utils/webRTC/webRTCHandler';\r\nimport { MdCallEnd } from 'react-icons/md';\r\n\r\nconst styles = {\r\n  buttonContainer: {\r\n    marginTop: '10px',\r\n    width: '40px',\r\n    height: '40px',\r\n    borderRadius: '40px',\r\n    border: '2px solid #e6e5e8',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n};\r\n\r\nconst CallingDialog = () => {\r\n  const handleHangUpButtonPressed = () => {\r\n    hangUp();\r\n  };\r\n\r\n  return (\r\n    <div className='direct_calling_dialog background_secondary_color'>\r\n      <span>Calling</span>\r\n      <div style={styles.buttonContainer} onClick={handleHangUpButtonPressed}>\r\n        <MdCallEnd style={{ width: '20px', height: '20px', fill: '#e6e5e8' }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallingDialog;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n  button: {\r\n    width: '50px',\r\n    height: '50px',\r\n    borderRadius: '40px',\r\n    border: '2px solid #e6e5e8',\r\n    textDecoration: 'none',\r\n    backgroundColor: '#282C34',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginLeft: '10px',\r\n    boxShadow: 'none',\r\n    borderImage: 'none',\r\n    borderStyle: 'none',\r\n    borderWidth: '0px',\r\n    outline: 'none'\r\n  }\r\n};\r\n\r\nconst ConversationButton = (props) => {\r\n  const { onClickHandler } = props;\r\n  return (\r\n    <button style={styles.button} onClick={onClickHandler}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ConversationButton;\r\n","import React from 'react';\r\nimport { MdCallEnd, MdMic, MdMicOff, MdVideocam, MdVideocamOff, MdVideoLabel, MdCamera } from 'react-icons/md';\r\nimport ConversationButton from './ConversationButton';\r\nimport { switchForScreenSharingStream, hangUp } from '../../../utils/webRTC/webRTCHandler';\r\n\r\nconst styles = {\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    bottom: '22%',\r\n    left: '35%'\r\n  },\r\n  icon: {\r\n    width: '25px',\r\n    height: '25px',\r\n    fill: '#e6e5e8'\r\n  }\r\n};\r\n\r\nconst ConversationButtons = (props) => {\r\n  const {\r\n    localStream,\r\n    localCameraEnabled,\r\n    localMicrophoneEnabled,\r\n    setCameraEnabled,\r\n    setMicrophoneEnabled,\r\n    screenSharingActive\r\n  } = props;\r\n\r\n  const handleMicButtonPressed = () => {\r\n    const micEnabled = localMicrophoneEnabled;\r\n    localStream.getAudioTracks()[0].enabled = !micEnabled;\r\n    setMicrophoneEnabled(!micEnabled);\r\n  };\r\n\r\n  const handleCameraButtonPressed = () => {\r\n    const cameraEnabled = localCameraEnabled;\r\n    localStream.getVideoTracks()[0].enabled = !cameraEnabled;\r\n    setCameraEnabled(!cameraEnabled);\r\n  };\r\n\r\n  const handleScreenSharingButtonPressed = () => {\r\n    switchForScreenSharingStream();\r\n  };\r\n\r\n  const handleHangUpButtonPressed = () => {\r\n    hangUp();\r\n  };\r\n\r\n  return (\r\n    <div style={styles.buttonContainer}>\r\n      <ConversationButton onClickHandler={handleMicButtonPressed}>\r\n        {localMicrophoneEnabled ? <MdMic style={styles.icon} /> : <MdMicOff style={styles.icon} />}\r\n      </ConversationButton>\r\n      <ConversationButton onClickHandler={handleHangUpButtonPressed}>\r\n        <MdCallEnd style={styles.icon} />\r\n      </ConversationButton>\r\n      <ConversationButton onClickHandler={handleCameraButtonPressed}>\r\n        {localCameraEnabled ? <MdVideocam style={styles.icon} /> : <MdVideocamOff style={styles.icon} />}\r\n      </ConversationButton>\r\n      <ConversationButton onClickHandler={handleScreenSharingButtonPressed}>\r\n        {screenSharingActive ? <MdCamera style={styles.icon} /> : <MdVideoLabel style={styles.icon} />}\r\n      </ConversationButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationButtons;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LocalVideoView from '../LocalVideoView/LocalVideoView';\r\nimport RemoteVideoView from '../RemoteVideoView/RemoteVideoView';\r\nimport CallRejectedDialog from '../CallRejectedDialog/CallRejectedDialog';\r\nimport IncomingCallDialog from '../IncomingCallDialog/IncomingCallDialog';\r\nimport CallingDialog from '../CallingDialog/CallingDialog';\r\nimport { callStates, setCallRejected, setLocalCameraEnabled, setLocalMicrophoneEnabled } from '../../../store/actions/callActions';\r\nimport ConversationButtons from '../ConversationButtons/ConversationButtons';\r\n\r\nconst DirectCall = (props) => {\r\n  const {\r\n    localStream,\r\n    remoteStream,\r\n    callState,\r\n    callerUsername,\r\n    callingDialogVisible,\r\n    callRejected,\r\n    hideCallRejectedDialog\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <LocalVideoView localStream={localStream} />\r\n      {remoteStream && callState === callStates.CALL_IN_PROGRESS && <RemoteVideoView remoteStream={remoteStream} />}\r\n      {callRejected.rejected && <CallRejectedDialog\r\n        reason={callRejected.reason}\r\n        hideCallRejectedDialog={hideCallRejectedDialog}\r\n      />}\r\n      {callState === callStates.CALL_REQUESTED && <IncomingCallDialog callerUsername={callerUsername} />}\r\n      {callingDialogVisible && <CallingDialog />}\r\n      {remoteStream && callState === callStates.CALL_IN_PROGRESS && <ConversationButtons {...props} />}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStoreStateToProps ({ call }) {\r\n  return {\r\n    ...call\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    hideCallRejectedDialog: (callRejectedDetails) => dispatch(setCallRejected(callRejectedDetails)),\r\n    setCameraEnabled: (enabled) => dispatch(setLocalCameraEnabled(enabled)),\r\n    setMicrophoneEnabled: (enabled) => dispatch(setLocalMicrophoneEnabled(enabled))\r\n  };\r\n}\r\n\r\nexport default connect(mapStoreStateToProps, mapDispatchToProps)(DirectCall);\r\n","import React from 'react';\r\n\r\nimport './DashboardInformation.css';\r\n\r\nconst DashboardInformation = ({ username }) => {\r\n    return (\r\n        <div className='dashboard_info_text_container'>\r\n            <span className='dashboard_info_text_title'>\r\n                Hello {username} welcome in VideoTalker\r\n            </span>\r\n            <span className='dashboard_info_text_description'>\r\n                You can start a call calling directly to a person from the list or \r\n                you can create or join group call.\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardInformation;","import React from 'react';\r\n\r\nconst GroupCallRoomsListItem = ({ room }) => {\r\n    const handleListItemPressed = () => {\r\n        //join the group call\r\n    }\r\n    return (\r\n        <div onClick={handleListItemPressed} className='group_calls_list_item background_main_color'>\r\n            <span>{room.hostName}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GroupCallRoomsListItem;","import React from 'react';\r\nimport GroupCallRoomsListItem from './GroupCallRoomsListItem';\r\n\r\nimport './GroupCallRoomsList.css';\r\n\r\nconst dummyList = [\r\n    {\r\n        roomId: '123123',\r\n        hostName: 'Room 1'\r\n    },\r\n    {\r\n        roomId: '321321',\r\n        hostName: 'Room 2'\r\n    }\r\n];\r\n\r\nconst GroupCallRoomsList = () => {\r\n    return (\r\n        <>\r\n            {dummyList.map(room => <GroupCallRoomsListItem key={room.roomId} room={room}/>)} \r\n        </>\r\n    );\r\n};\r\n\r\nexport default GroupCallRoomsList;","import React, { useEffect } from 'react';\nimport logo from '../resources/logo.png';\nimport ActiveUsersList from './components/ActiveUsersList/ActiveUsersList';\nimport * as webRTCHandler from '../utils/webRTC/webRTCHandler';\nimport * as webRTCGroupHandler from '../utils/webRTC/webRTCGroupCallHandler';\nimport DirectCall from './components/DirectCall/DirectCall';\nimport { connect } from 'react-redux';\nimport DashboardInformation from './components/DashboardInformation/DashboardInformation';\nimport { callStates } from '../store/actions/callActions';\nimport './Dashboard.css';\nimport GroupCallRoomsList from './components/GroupCallRoomsList/GroupCallRoomsList';\n\nconst Dashboard = ({ username, callState }) => {\n\nuseEffect(() => {\n  webRTCHandler.getLocalStream();\n  webRTCGroupHandler.connectWithMyPeer();\n}, []);\n  \n  return (\n    <div className='dashboard_container background_main_color'>\n      <div className='dashboard_left_section'>\n        <div className='dashboard_content_container'>\n            <DirectCall />\n            {callState !== callStates.CALL_IN_PROGRESS && <DashboardInformation username={username} />}\n        </div>\n        <div className='dashboard_rooms_container background_secondary_color'>\n            <GroupCallRoomsList />\n        </div>\n      </div>\n      <div className='dashboard_right_section background_secondary_color'>\n        <div className='dashboard_active_users_list'>\n          <ActiveUsersList />\n        </div>\n        <div className='dashboard_logo_container'>\n          <img className='dashboard_logo_image' src={logo} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ call, dashboard }) => ({\n  ...call,\n  ...dashboard\n})\n\nexport default connect(mapStateToProps)(Dashboard);\n","let myPeer;\r\n\r\nexport const connectWithMyPeer = () => {\r\n    myPeer = new window.Peer(undefined, {\r\n        path: '/peerjs',\r\n        host: '/',\r\n        port: '5000'\r\n    });\r\n\r\n    myPeer.on('open', (id) => {\r\n        console.log('succesfully connected with peer server');\r\n        console.log(id)\r\n    });\r\n};","import React from 'react';\n\nconst UsernameInput = (props) => {\n  const { username, setUsername } = props;\n\n  return (\n    <div className='login-page_input_container'>\n      <input\n        placeholder='Enter your name'\n        type='text'\n        value={username}\n        onChange={(event) => { setUsername(event.target.value); }}\n        className='login-page_input background_main_color text_main_color'\n      />\n    </div>\n  );\n};\n\nexport default UsernameInput;\n","import React from 'react';\n\nconst SubmitButton = ({ handleSubmitButtonPressed }) => {\n  return (\n    <div className='login-page_button_container'>\n      <button\n        className='login-page_button background_main_color text_main_color'\n        onClick={handleSubmitButtonPressed}\n      >\n        Start using VideoTalker\n      </button>\n    </div>\n\n  );\n};\n\nexport default SubmitButton;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport logo from '../resources/logo.png';\nimport UsernameInput from './components/UsernameInput';\nimport SubmitButton from './components/SubmitButton';\nimport { useHistory } from 'react-router-dom';\nimport { setUsername } from '../store/actions/dashboardActions';\nimport { registerNewUser } from '../utils/wssConnection/wssConnection';\nimport './LoginPage.css';\n\nconst LoginPage = ({ saveUsername }) => {\n  const [username, setUsername] = useState('');\n\n  const history = useHistory();\n\n  const handleSubmitButtonPressed = () => {\n    registerNewUser(username);\n    saveUsername(username);\n    history.push('/dashboard');\n  };\n\n  return (\n    <div className='login-page_container background_main_color'>\n      <div className='login-page_login_box background_secondary_color'>\n        <div className='login-page_logo_container'>\n          <img className='login-page_logo_image' src={logo} alt='VideoTalker' />\n        </div>\n        <div className='login-page_title_container'>\n          <h2>Get on Board</h2>\n        </div>\n        <UsernameInput username={username} setUsername={setUsername} />\n        <SubmitButton handleSubmitButtonPressed={handleSubmitButtonPressed} />\n      </div>\n    </div>\n  );\n};\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    saveUsername: username => dispatch(setUsername(username))\n  };\n};\n\nexport default connect(null, mapActionsToProps)(LoginPage);\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { connectWithWebSocket } from './utils/wssConnection/wssConnection';\nimport Dashboard from './Dashboard/Dashboard';\nimport LoginPage from './LoginPage/LoginPage';\n\nfunction App () {\n  useEffect(() => {\n    connectWithWebSocket();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/dashboard'>\n          <Dashboard />\n        </Route>\n        <Route path='/'>\n          <LoginPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}