{"version":3,"sources":["utils/webRTC/webRTCHandler.js","utils/wssConnection/wssConnection.js","store/actions/dashboardActions.js","store/reducers/dashboardReducer.js","store/actions/callActions.js","store/reducers/callReducer.js","store/reducer.js","store/store.js","resources/logo.png","resources/userAvatar.png","Dashboard/components/ActiveUsersList/ActiveUsersListItem.js","Dashboard/components/ActiveUsersList/ActiveUsersList.js","Dashboard/components/LocalVideoView/LocalVideoView.js","Dashboard/components/RemoteVideoView/RemoteVideoView.js","Dashboard/components/CallRejectedDialog/CallRejectedDialog.js","Dashboard/components/IncomingCallDialog/IncomingCallDialog.js","Dashboard/components/CallingDialog/CallingDialog.js","Dashboard/components/ConversationButtons/ConversationButton.js","Dashboard/components/ConversationButtons/ConversationButtons.js","Dashboard/components/DirectCall/DirectCall.js","Dashboard/components/DashboardInformation/DashboardInformation.js","Dashboard/components/GroupCallRoomsList/GroupCallRoomsListItem.js","Dashboard/components/GroupCallRoomsList/GroupCallRoomsList.js","Dashboard/Dashboard.js","utils/webRTC/webRTCGroupCallHandler.js","LoginPage/components/UsernameInput.js","LoginPage/components/SubmitButton.js","LoginPage/LoginPage.js","App.js","index.js"],"names":["connectedUserSocketId","peerConnection","screenSharingStream","socket","DASHBOARD_SET_USERNAME","DASHBOARD_SET_ACTIVE_USERS","initState","username","activeUsers","reducer","state","action","type","dashboardActions","callStates","CALL_SET_LOCAL_STREAM","CALL_SET_CALL_STATE","CALL_SET_CALLING_DIALOG_VISIBLE","CALL_SET_CALLER_USERNAME","CALL_SET_CALL_REJECTED","CALL_SET_REMOTE_STREAM","CALL_SET_LOCAL_MICROPHONE_ENABLED","CALL_SET_LOCAL_CAMERA_ENABLED","CALL_SET_SCREEN_SHARING_ACTIVE","CALL_RESET_CALL_STATE","setCallState","callState","setCallingDialogVisible","visible","setCallRejected","callRejectedDetails","callRejected","rejected","reason","setScreenSharingActive","active","localStream","callingDialogVisible","callerUsername","remoteStream","localCameraEnabled","localMicrophoneEnabled","screenSharingActive","callActions","enabled","combineReducers","dashboard","dashboardReducer","call","callReducer","store","createStore","mainReducer","composeWithDevTools","preOfferAnswers","defaultConstrains","video","audio","configuration","iceServers","urls","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","dispatch","createPeerConnection","catch","err","console","log","RTCPeerConnection","getState","getTracks","track","addTrack","ontrack","streams","onicecandidate","event","candidate","wss","onconnectionstatechange","connectionState","handlePreOffer","data","checkIfCallIsPossible","callerSocketId","answer","sendOffer","a","createOffer","offer","setLocalDescription","calleeSocketId","handleOffer","setRemoteDescription","createAnswer","handleAnswer","handleCandidate","addIceCandidate","error","switchForScreenSharingStream","getDisplayMedia","senders","getSenders","find","sender","kind","getVideoTracks","replaceTrack","forEach","stop","hangUp","resetCallDataAfterHangUp","close","resetCallData","getAudioTracks","broadcastEventTypes","connectWithWebSocket","socketClient","on","id","handleBroadcastEvents","webRTCHandler","rejectionReason","sendPreOffer","emit","sendPreOfferAnswer","sendWebRTCOffer","sendWebRTCAnswer","sendWebRTCCandidate","sendUserHangedUp","filter","activeUser","socketId","ActiveUsersListItem","props","className","onClick","calleeDetails","callee","caller","src","userAvatar","connect","map","styles","videoContainer","width","height","borderRadius","position","top","right","videoElement","LocalVideoView","localVideoRef","useRef","useEffect","localVideo","current","srcObject","onloadedmetadata","play","style","ref","autoPlay","muted","remoteVideoRef","remoteVideo","CallRejectedDialog","hideCallRejectedDialog","setTimeout","IncomingCallDialog","buttonContainer","marginTop","border","display","alignItems","justifyContent","CallingDialog","fill","button","textDecoration","backgroundColor","marginLeft","boxShadow","borderImage","borderStyle","borderWidth","outline","ConversationButton","onClickHandler","children","bottom","left","icon","ConversationButtons","setCameraEnabled","setMicrophoneEnabled","micEnabled","cameraEnabled","setLocalCameraEnabled","setLocalMicrophoneEnabled","RemoteVideoView","DashboardInformation","GroupCallRoomsListItem","room","hostName","dummyList","roomId","GroupCallRoomsList","window","Peer","undefined","path","host","port","logo","UsernameInput","setUsername","placeholder","value","onChange","target","SubmitButton","handleSubmitButtonPressed","saveUsername","useState","history","useHistory","alt","registerNewUser","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.779c1d89.chunk.js","sourcesContent":["import store from '../../store/store';\nimport { setLocalStream, setCallState, callStates, setCallingDialogVisible, setCallerUsername, setCallRejected, setRemoteStream, setScreenSharingActive, resetCallDataState } from '../../store/actions/callActions';\nimport * as wss from '../wssConnection/wssConnection';\n\nconst preOfferAnswers = {\n  CALL_ACCEPTED: 'CALL_ACCEPTED',\n  CALL_REJECTED: 'CALL_REJECTED',\n  CALL_NOT_AVAILABLE: 'CALL_NOT_AVAILABLE'\n};\n\nconst defaultConstrains = {\n  video: true,\n  audio: true\n};\n\nconst configuration = {\n  iceServers: [{\n    urls: 'stun:stun.l.google.com:13902'\n  }]\n};\n\nlet connectedUserSocketId;\nlet peerConnection;\n\nexport const getLocalStream = () => {\n  navigator.mediaDevices.getUserMedia(defaultConstrains)\n    .then(stream => {\n      store.dispatch(setLocalStream(stream));\n      store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n      createPeerConnection();\n    })\n    .catch(err => {\n      console.log('error occured when trying to get an access to get local stream');\n      console.log(err);\n    });\n}\n;\n\nconst createPeerConnection = () => {\n  peerConnection = new RTCPeerConnection(configuration);\n\n  const localStream = store.getState().call.localStream;\n\n  for (const track of localStream.getTracks()) {\n    peerConnection.addTrack(track, localStream);\n  }\n\n  peerConnection.ontrack = ({ streams: [stream] }) => {\n    store.dispatch(setRemoteStream(stream));\n  };\n\n  peerConnection.onicecandidate = (event) => {\n    console.log('geeting candidates from stun server');\n    if (event.candidate) {\n      wss.sendWebRTCCandidate({\n        candidate: event.candidate,\n        connectedUserSocketId: connectedUserSocketId\n      });\n    }\n  };\n\n  peerConnection.onconnectionstatechange = (event) => {\n    if (peerConnection.connectionState === 'connected') {\n      console.log('succesfully connected with other peer');\n    }\n  };\n};\n\nexport const callToOtherUser = (calleeDetails) => {\n  connectedUserSocketId = calleeDetails.socketId;\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n  store.dispatch(setCallingDialogVisible(true));\n  wss.sendPreOffer({\n    callee: calleeDetails,\n    caller: {\n      username: store.getState().dashboard.username\n    }\n  });\n};\n\nexport const handlePreOffer = (data) => {\n  if (checkIfCallIsPossible()) {\n    connectedUserSocketId = data.callerSocketId;\n    store.dispatch(setCallerUsername(data.callerUsername));\n    store.dispatch(setCallState(callStates.CALL_REQUESTED));\n  } else {\n    wss.sendPreOfferAnswer({\n      callerSocketId: data.callerSocketId,\n      answer: preOfferAnswers.CALL_NOT_AVAILABLE\n    });\n  }\n};\n\nexport const acceptIncomingCallRequest = () => {\n  wss.sendPreOfferAnswer({\n    callerSocketId: connectedUserSocketId,\n    answer: preOfferAnswers.CALL_ACCEPTED\n  });\n\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n};\n\nexport const rejectIncomingCallRequest = () => {\n  wss.sendPreOfferAnswer({\n    callerSocketId: connectedUserSocketId,\n    answer: preOfferAnswers.CALL_REJECTED\n  });\n  resetCallData();\n};\n\nexport const handlePreOfferAnswer = (data) => {\n  store.dispatch(setCallingDialogVisible(false));\n\n  if (data.answer === preOfferAnswers.CALL_ACCEPTED) {\n    sendOffer();\n  } else {\n    let rejectionReason;\n    if (data.answer === preOfferAnswers.CALL_NOT_AVAILABLE) {\n      rejectionReason = 'Callee is not able to pick up the call right now';\n    } else {\n      rejectionReason = 'Call rejected by the callee';\n    }\n    store.dispatch(setCallRejected({\n      rejected: true,\n      reason: rejectionReason\n    }));\n\n    resetCallData();\n  }\n};\n\nconst sendOffer = async () => {\n  const offer = await peerConnection.createOffer();\n  await peerConnection.setLocalDescription(offer);\n  wss.sendWebRTCOffer({\n    calleeSocketId: connectedUserSocketId,\n    offer: offer\n  });\n};\n\nexport const handleOffer = async (data) => {\n  await peerConnection.setRemoteDescription(data.offer);\n  const answer = await peerConnection.createAnswer();\n  await peerConnection.setLocalDescription(answer);\n  wss.sendWebRTCAnswer({\n    callerSocketId: connectedUserSocketId,\n    answer: answer\n  });\n};\n\nexport const handleAnswer = async (data) => {\n  await peerConnection.setRemoteDescription(data.answer);\n};\n\nexport const handleCandidate = async (data) => {\n  try {\n    console.log('adding ice candidates');\n    await peerConnection.addIceCandidate(data.candidate);\n  } catch (err) {\n    console.error('error occured when trying to add received ice candidate', err);\n  }\n};\n\nexport const checkIfCallIsPossible = () => {\n  if (store.getState().call.localStream === null ||\n  store.getState().call.callState !== callStates.CALL_AVAILABLE) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nlet screenSharingStream;\n\nexport const switchForScreenSharingStream = async () => {\n  if (!store.getState().call.screenSharingActive) {\n    try {\n      screenSharingStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n      store.dispatch(setScreenSharingActive(true));\n      const senders = peerConnection.getSenders();\n      const sender = senders.find(sender => sender.track.kind == screenSharingStream.getVideoTracks()[0].kind);\n      sender.replaceTrack(screenSharingStream.getVideoTracks()[0]);\n    } catch (err) {\n      console.error('error occured when trying to get screen sharing stream', err);\n    }\n  } else {\n    const localStream = store.getState().call.localStream;\n    const senders = peerConnection.getSenders();\n    const sender = senders.find(sender => sender.track.kind == localStream.getVideoTracks()[0].kind);\n    sender.replaceTrack(localStream.getVideoTracks()[0]);\n    store.dispatch(setScreenSharingActive(false));\n    screenSharingStream.getTracks().forEach(track => track.stop());\n  }\n}\n;\n\nexport const handleUserHangedUp = () => {\n  resetCallDataAfterHangUp();\n};\n\nexport const hangUp = () => {\n  wss.sendUserHangedUp({\n    connectedUserSocketId: connectedUserSocketId\n  });\n\n  resetCallDataAfterHangUp();\n};\n\nconst resetCallDataAfterHangUp = () => {\n  peerConnection.close();\n  peerConnection = null;\n  createPeerConnection();\n  resetCallData();\n\n  const localStream = store.getState().call.localStream;\n  localStream.getVideoTracks()[0].enabled = true;\n  localStream.getAudioTracks()[0].enabled = true;\n\n  if (store.getState().call.screenSharingActive) {\n    screenSharingStream.getTracks().forEach(track => {\n      track.stop();\n    });\n  }\n\n  store.dispatch(resetCallDataState());\n};\n\nexport const resetCallData = () => {\n  connectedUserSocketId = null;\n  store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n};\n","import socketClient from 'socket.io-client';\nimport store from '../../store/store';\nimport * as dashboardActions from '../../store/actions/dashboardActions';\nimport * as webRTCHandler from '../webRTC/webRTCHandler';\n\nconst SERVER = \"https://videotalkerserver.herokuapp.com/\";\n//const SERVER = 'http://localhost:5000';\n\nconst broadcastEventTypes = {\n  ACTIVE_USERS: 'ACTIVE_USERS',\n  GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\n};\n\nlet socket;\n\nexport const connectWithWebSocket = () => {\n  socket = socketClient(SERVER);\n\n  socket.on('connection', () => {\n    console.log('succesfully connected with wss server');\n    console.log(socket.id);\n  });\n\n  socket.on('broadcast', (data) => {\n    handleBroadcastEvents(data);\n  });\n\n  // listeners related with direct call\n  socket.on('pre-offer', (data) => {\n    webRTCHandler.handlePreOffer(data);\n  });\n\n  socket.on('pre-offer-answer', (data) => {\n    webRTCHandler.handlePreOfferAnswer(data);\n  });\n\n  socket.on('webRTC-offer', (data) => {\n    webRTCHandler.handleOffer(data);\n  });\n\n  socket.on('webRTC-answer', (data) => {\n    webRTCHandler.handleAnswer(data);\n  });\n\n  socket.on('webRTC-candidate', (data) => {\n    webRTCHandler.handleCandidate(data);\n  });\n\n  socket.on('user-hanged-up', () => {\n    webRTCHandler.handleUserHangedUp();\n  });\n};\n\nexport const registerNewUser = (username) => {\n  socket.emit('register-new-user', {\n    username: username,\n    socketId: socket.id\n  });\n};\n\n// emitting events to server related with direct call\n\nexport const sendPreOffer = (data) => {\n  socket.emit('pre-offer', data);\n};\n\nexport const sendPreOfferAnswer = (data) => {\n  socket.emit('pre-offer-answer', data);\n};\n\nexport const sendWebRTCOffer = (data) => {\n  socket.emit('webRTC-offer', data);\n};\n\nexport const sendWebRTCAnswer = (data) => {\n  socket.emit('webRTC-answer', data);\n};\n\nexport const sendWebRTCCandidate = (data) => {\n  socket.emit('webRTC-candidate', data);\n};\n\nexport const sendUserHangedUp = (data) => {\n  socket.emit('user-hanged-up', data);\n};\n\nconst handleBroadcastEvents = (data) => {\n  switch (data.event) {\n    case broadcastEventTypes.ACTIVE_USERS:\n      const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\n      store.dispatch(dashboardActions.setActiveUsers(activeUsers));\n      break;\n    default:\n      break;\n  }\n}\n;\n","export const DASHBOARD_SET_USERNAME = 'DASHBOARD.SET_USERNAME';\nexport const DASHBOARD_SET_ACTIVE_USERS = 'DASHBOARD.SET_ACTIVE_USERS';\n\nexport const setUsername = (username) => {\n  return {\n    type: DASHBOARD_SET_USERNAME,\n    username\n  };\n}\n;\n\nexport const setActiveUsers = (activeUsers) => {\n  return {\n    type: DASHBOARD_SET_ACTIVE_USERS,\n    activeUsers\n  };\n}\n;","import * as dashboardActions from '../actions/dashboardActions';\n\nconst initState = {\n  username: '',\n  activeUsers: []\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case dashboardActions.DASHBOARD_SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case dashboardActions.DASHBOARD_SET_ACTIVE_USERS:\n      return {\n        ...state,\n        activeUsers: action.activeUsers\n      };\n    default:\n      return state;\n  }\n}\n;\n\nexport default reducer;\n","export const callStates = {\n  CALL_UNAVAILABLE: 'CALL_UNAVAILABLE',\n  CALL_AVAILABLE: 'CALL_AVAILABLE',\n  CALL_REQUESTED: 'CALL_REQUESTED',\n  CALL_IN_PROGRESS: 'CALL_IN_PROGRESS'\n};\n\nexport const CALL_SET_LOCAL_STREAM = 'CALL.SET_LOCAL_STREAM';\nexport const CALL_SET_CALL_STATE = 'CALL.SET_CALL_STATE';\nexport const CALL_SET_CALLING_DIALOG_VISIBLE = 'CALL.SET_CALLING_DIALOG_VISIBLE';\nexport const CALL_SET_CALLER_USERNAME = 'CALL.SET_CALLER_USERNAME';\nexport const CALL_SET_CALL_REJECTED = 'CALL.SET_CALL_REJECTED';\nexport const CALL_SET_REMOTE_STREAM = 'CALL.SET_REMOTE_STREAM';\nexport const CALL_SET_LOCAL_MICROPHONE_ENABLED = 'CALL.SET_LOCAL_MICROPHONE_ENABLED';\nexport const CALL_SET_LOCAL_CAMERA_ENABLED = 'CALL.SET_LOCAL_CAMERA_ENABLED';\nexport const CALL_SET_SCREEN_SHARING_ACTIVE = 'CALL.SET_SCREEN_SHARING_ACTIVE';\nexport const CALL_RESET_CALL_STATE = 'CALL.RESET_CALL_STATE';\n\nexport const setLocalStream = (localStream) => {\n  return {\n    type: CALL_SET_LOCAL_STREAM,\n    localStream\n  };\n}\n;\n\nexport const setCallState = (callState) => {\n  return {\n    type: CALL_SET_CALL_STATE,\n    callState\n  };\n};\n\nexport const setCallingDialogVisible = (visible) => {\n  return {\n    type: CALL_SET_CALLING_DIALOG_VISIBLE,\n    visible\n  };\n};\n\nexport const setCallerUsername = (callerUsername) => {\n  return {\n    type: CALL_SET_CALLER_USERNAME,\n    callerUsername\n  };\n}\n;\n\nexport const setCallRejected = (callRejectedDetails) => {\n  return {\n    type: CALL_SET_CALL_REJECTED,\n    callRejected: {\n      rejected: callRejectedDetails.rejected,\n      reason: callRejectedDetails.reason\n    }\n  };\n};\n\nexport const setRemoteStream = (remoteStream) => {\n  return {\n    type: CALL_SET_REMOTE_STREAM,\n    remoteStream\n  };\n}\n;\n\nexport const setLocalMicrophoneEnabled = (enabled) => {\n  return {\n    type: CALL_SET_LOCAL_MICROPHONE_ENABLED,\n    enabled\n  };\n};\n\nexport const setLocalCameraEnabled = (enabled) => {\n  return {\n    type: CALL_SET_LOCAL_CAMERA_ENABLED,\n    enabled\n  };\n};\n\nexport const setScreenSharingActive = (active) => {\n  return {\n    type: CALL_SET_SCREEN_SHARING_ACTIVE,\n    active\n  };\n}\n;\n\nexport const resetCallDataState = () => {\n  return {\n    type: CALL_RESET_CALL_STATE\n  };\n};\n","import * as callActions from '../actions/callActions';\n\nconst initState = {\n  localStream: null,\n  callState: callActions.callStates.CALL_UNAVAILABLE,\n  callingDialogVisible: false,\n  callerUsername: '',\n  callRejected: {\n    rejected: false,\n    reason: ''\n  },\n  remoteStream: null,\n  localCameraEnabled: true,\n  localMicrophoneEnabled: true,\n  screenSharingActive: false\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case callActions.CALL_SET_LOCAL_STREAM:\n      return {\n        ...state,\n        localStream: action.localStream\n      };\n    case callActions.CALL_SET_CALL_STATE:\n      return {\n        ...state,\n        callState: action.callState\n      };\n    case callActions.CALL_SET_CALLING_DIALOG_VISIBLE:\n      return {\n        ...state,\n        callingDialogVisible: action.visible\n      };\n    case callActions.CALL_SET_CALLER_USERNAME:\n      return {\n        ...state,\n        callerUsername: action.callerUsername\n      };\n    case callActions.CALL_SET_CALL_REJECTED:\n      return {\n        ...state,\n        callRejected: action.callRejected\n      };\n    case callActions.CALL_SET_REMOTE_STREAM:\n      return {\n        ...state,\n        remoteStream: action.remoteStream\n      };\n    case callActions.CALL_SET_LOCAL_CAMERA_ENABLED:\n      return {\n        ...state,\n        localCameraEnabled: action.enabled\n      };\n    case callActions.CALL_SET_LOCAL_MICROPHONE_ENABLED:\n      return {\n        ...state,\n        localMicrophoneEnabled: action.enabled\n      };\n    case callActions.CALL_SET_SCREEN_SHARING_ACTIVE:\n      return {\n        ...state,\n        screenSharingActive: action.active\n      };\n    case callActions.CALL_RESET_CALL_STATE:\n      return {\n        ...state,\n        remoteStream: null,\n        screenSharingActive: false,\n        callerUsername: '',\n        localMicrophoneEnabled: true,\n        localCameraEnabled: true,\n        callingDialogVisible: false\n      };\n    default:\n      return state;\n  }\n}\n;\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport dashboardReducer from './reducers/dashboardReducer';\nimport callReducer from './reducers/callReducer';\n\nexport default combineReducers({\n  dashboard: dashboardReducer,\n  call: callReducer\n});\n","import { createStore } from 'redux';\nimport mainReducer from './reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  mainReducer,\n  composeWithDevTools()\n);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/logo.d549b294.png\";","export default __webpack_public_path__ + \"static/media/userAvatar.a6143582.png\";","import React from 'react';\nimport userAvatar from '../../../resources/userAvatar.png';\nimport { callToOtherUser } from '../../../utils/webRTC/webRTCHandler';\nimport { callStates } from '../../../store/actions/callActions';\n\nconst ActiveUsersListItem = (props) => {\n  const { activeUser, callState } = props;\n\n  const handleListItemPressed = () => {\n    if (callState === callStates.CALL_AVAILABLE) {\n      callToOtherUser(activeUser);\n    }\n  };\n\n  return (\n    <div className='active_user_list_item' onClick={handleListItemPressed}>\n      <div className='active_user_list_image_container'>\n        <img className='active_user_list_image' src={userAvatar} />\n      </div>\n      <span className='active_user_list_text'>{activeUser.username}</span>\n    </div>\n  );\n};\n\nexport default ActiveUsersListItem;\n","import React from 'react';\nimport ActiveUsersListItem from './ActiveUsersListItem';\nimport { connect } from 'react-redux';\n\nimport './ActiveUsersList.css';\n\nconst ActiveUsersList = ({ activeUsers, callState }) => {\n  return (\n    <div className='active_user_list_container'>\n      {activeUsers.map((activeUser) =>\n        <ActiveUsersListItem\n          key={activeUser.socketId}\n          activeUser={activeUser}\n          callState={callState}\n        />)}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ dashboard, call }) => ({\n  ...dashboard,\n  ...call\n});\n\nexport default connect(mapStateToProps)(ActiveUsersList);\n","import React, { useRef, useEffect } from 'react';\n\nconst styles = {\n  videoContainer: {\n    width: '150px',\n    height: '150px',\n    borderRadius: '8px',\n    position: 'absolute',\n    top: '5%',\n    right: '23%'\n  },\n  videoElement: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst LocalVideoView = props => {\n  const { localStream } = props;\n  const localVideoRef = useRef();\n\n  useEffect(() => {\n    if (localStream) {\n      const localVideo = localVideoRef.current;\n      localVideo.srcObject = localStream;\n\n      localVideo.onloadedmetadata = () => {\n        localVideo.play();\n      };\n    }\n  }, [localStream]);\n\n  return (\n    <div style={styles.videoContainer} className='background_secondary_color'>\n      <video style={styles.videoElement} ref={localVideoRef} autoPlay muted />\n    </div>\n  );\n};\n\nexport default LocalVideoView;\n","import React, { useRef, useEffect } from 'react';\n\nconst styles = {\n  videoContainer: {\n    width: '100%',\n    height: '100%'\n  },\n  videoElement: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst LocalVideoView = props => {\n  const { remoteStream } = props;\n  const remoteVideoRef = useRef();\n\n  useEffect(() => {\n    if (remoteStream) {\n      const remoteVideo = remoteVideoRef.current;\n      remoteVideo.srcObject = remoteStream;\n\n      remoteVideo.onloadedmetadata = () => {\n        remoteVideo.play();\n      };\n    }\n  }, [remoteStream]);\n\n  return (\n    <div style={styles.videoContainer}>\n      <video style={styles.videoElement} ref={remoteVideoRef} autoPlay />\n    </div>\n  );\n};\n\nexport default LocalVideoView;\n","import React, { useEffect } from 'react';\n\nimport './CallRejectedDialog.css';\n\nconst CallRejectedDialog = ({ reason, hideCallRejectedDialog }) => {\n  useEffect(() => {\n    setTimeout(() => {\n      hideCallRejectedDialog({\n        rejected: false,\n        reason: ''\n      });\n    }, [4000]);\n  }, []);\n\n  return (\n    <div className='call_rejected_dialog background_secondary_color'>\n      <span>\n        {reason}\n      </span>\n    </div>\n  );\n};\n\nexport default CallRejectedDialog;\n","import React from 'react';\nimport { acceptIncomingCallRequest, rejectIncomingCallRequest } from '../../../utils/webRTC/webRTCHandler';\n\nimport './IncomingCallDialog.css';\n\nconst IncomingCallDialog = ({ callerUsername }) => {\n  const handleAcceptButtonPressed = () => {\n    acceptIncomingCallRequest();\n  };\n\n  const handleRejectButtonPressed = () => {\n    rejectIncomingCallRequest();\n  };\n\n  return (\n    <div className='direct_call_dialog background_secondary_color'>\n      <span className='direct_call_dialog_caller_name'>{callerUsername}</span>\n      <div className='direct_call_dialog_button_container'>\n        <button className='direct_call_dialog_accept_button' onClick={handleAcceptButtonPressed}>\n          Accept\n        </button>\n        <button className='direct_call_dialog_reject_button' onClick={handleRejectButtonPressed}>\n          Reject\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomingCallDialog;\n","import React from 'react';\nimport './CallingDialog.css';\nimport { hangUp } from '../../../utils/webRTC/webRTCHandler';\nimport { MdCallEnd } from 'react-icons/md';\n\nconst styles = {\n  buttonContainer: {\n    marginTop: '10px',\n    width: '40px',\n    height: '40px',\n    borderRadius: '40px',\n    border: '2px solid #e6e5e8',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n};\n\nconst CallingDialog = () => {\n  const handleHangUpButtonPressed = () => {\n    hangUp();\n  };\n\n  return (\n    <div className='direct_calling_dialog background_secondary_color'>\n      <span>Calling</span>\n      <div style={styles.buttonContainer} onClick={handleHangUpButtonPressed}>\n        <MdCallEnd style={{ width: '20px', height: '20px', fill: '#e6e5e8' }} />\n      </div>\n    </div>\n  );\n};\n\nexport default CallingDialog;\n","import React from 'react';\n\nconst styles = {\n  button: {\n    width: '50px',\n    height: '50px',\n    borderRadius: '40px',\n    border: '2px solid #e6e5e8',\n    textDecoration: 'none',\n    backgroundColor: '#282C34',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: '10px',\n    boxShadow: 'none',\n    borderImage: 'none',\n    borderStyle: 'none',\n    borderWidth: '0px',\n    outline: 'none'\n  }\n};\n\nconst ConversationButton = (props) => {\n  const { onClickHandler } = props;\n  return (\n    <button style={styles.button} onClick={onClickHandler}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default ConversationButton;\n","import React from 'react';\nimport { MdCallEnd, MdMic, MdMicOff, MdVideocam, MdVideocamOff, MdVideoLabel, MdCamera } from 'react-icons/md';\nimport ConversationButton from './ConversationButton';\nimport { switchForScreenSharingStream, hangUp } from '../../../utils/webRTC/webRTCHandler';\n\nconst styles = {\n  buttonContainer: {\n    display: 'flex',\n    position: 'absolute',\n    bottom: '22%',\n    left: '35%'\n  },\n  icon: {\n    width: '25px',\n    height: '25px',\n    fill: '#e6e5e8'\n  }\n};\n\nconst ConversationButtons = (props) => {\n  const {\n    localStream,\n    localCameraEnabled,\n    localMicrophoneEnabled,\n    setCameraEnabled,\n    setMicrophoneEnabled,\n    screenSharingActive\n  } = props;\n\n  const handleMicButtonPressed = () => {\n    const micEnabled = localMicrophoneEnabled;\n    localStream.getAudioTracks()[0].enabled = !micEnabled;\n    setMicrophoneEnabled(!micEnabled);\n  };\n\n  const handleCameraButtonPressed = () => {\n    const cameraEnabled = localCameraEnabled;\n    localStream.getVideoTracks()[0].enabled = !cameraEnabled;\n    setCameraEnabled(!cameraEnabled);\n  };\n\n  const handleScreenSharingButtonPressed = () => {\n    switchForScreenSharingStream();\n  };\n\n  const handleHangUpButtonPressed = () => {\n    hangUp();\n  };\n\n  return (\n    <div style={styles.buttonContainer}>\n      <ConversationButton onClickHandler={handleMicButtonPressed}>\n        {localMicrophoneEnabled ? <MdMic style={styles.icon} /> : <MdMicOff style={styles.icon} />}\n      </ConversationButton>\n      <ConversationButton onClickHandler={handleHangUpButtonPressed}>\n        <MdCallEnd style={styles.icon} />\n      </ConversationButton>\n      <ConversationButton onClickHandler={handleCameraButtonPressed}>\n        {localCameraEnabled ? <MdVideocam style={styles.icon} /> : <MdVideocamOff style={styles.icon} />}\n      </ConversationButton>\n      <ConversationButton onClickHandler={handleScreenSharingButtonPressed}>\n        {screenSharingActive ? <MdCamera style={styles.icon} /> : <MdVideoLabel style={styles.icon} />}\n      </ConversationButton>\n    </div>\n  );\n};\n\nexport default ConversationButtons;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LocalVideoView from '../LocalVideoView/LocalVideoView';\nimport RemoteVideoView from '../RemoteVideoView/RemoteVideoView';\nimport CallRejectedDialog from '../CallRejectedDialog/CallRejectedDialog';\nimport IncomingCallDialog from '../IncomingCallDialog/IncomingCallDialog';\nimport CallingDialog from '../CallingDialog/CallingDialog';\nimport { callStates, setCallRejected, setLocalCameraEnabled, setLocalMicrophoneEnabled } from '../../../store/actions/callActions';\nimport ConversationButtons from '../ConversationButtons/ConversationButtons';\n\nconst DirectCall = (props) => {\n  const {\n    localStream,\n    remoteStream,\n    callState,\n    callerUsername,\n    callingDialogVisible,\n    callRejected,\n    hideCallRejectedDialog\n  } = props;\n\n  return (\n    <>\n      <LocalVideoView localStream={localStream} />\n      {remoteStream && callState === callStates.CALL_IN_PROGRESS && <RemoteVideoView remoteStream={remoteStream} />}\n      {callRejected.rejected && <CallRejectedDialog\n        reason={callRejected.reason}\n        hideCallRejectedDialog={hideCallRejectedDialog}\n      />}\n      {callState === callStates.CALL_REQUESTED && <IncomingCallDialog callerUsername={callerUsername} />}\n      {callingDialogVisible && <CallingDialog />}\n      {remoteStream && callState === callStates.CALL_IN_PROGRESS && <ConversationButtons {...props} />}\n    </>\n  );\n};\n\nfunction mapStoreStateToProps ({ call }) {\n  return {\n    ...call\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    hideCallRejectedDialog: (callRejectedDetails) => dispatch(setCallRejected(callRejectedDetails)),\n    setCameraEnabled: (enabled) => dispatch(setLocalCameraEnabled(enabled)),\n    setMicrophoneEnabled: (enabled) => dispatch(setLocalMicrophoneEnabled(enabled))\n  };\n}\n\nexport default connect(mapStoreStateToProps, mapDispatchToProps)(DirectCall);\n","import React from 'react';\n\nimport './DashboardInformation.css';\n\nconst DashboardInformation = ({ username }) => {\n  return (\n    <div className='dashboard_info_text_container'>\n      <span className='dashboard_info_text_title'>\n        Hello {username} welcome in VideoTalker.\n      </span>\n      <span className='dashboard_info_text_description'>\n        You can start a call calling directy to a person from the list or\n        you can create or join group call.\n      </span>\n    </div>\n  );\n};\n\nexport default DashboardInformation;\n","import React from 'react';\n\nconst GroupCallRoomsListItem = ({ room }) => {\n  const handleListItemPressed = () => {\n    // join the group call\n  };\n\n  return (\n    <div onClick={handleListItemPressed} className='group_calls_list_item background_main_color'>\n      <span>{room.hostName}</span>\n    </div>\n  );\n};\n\nexport default GroupCallRoomsListItem;\n","import React from 'react';\nimport GroupCallRoomsListItem from './GroupCallRoomsListItem';\n\nimport './GroupCallRoomsList.css';\n\nconst dummyList = [\n  {\n    roomId: '123123',\n    hostName: 'Mark'\n  },\n  {\n    roomId: '3213213',\n    hostName: 'Paul'\n  }\n];\n\nconst GroupCallRoomsList = () => {\n  return (\n    <>\n      {dummyList.map(room => <GroupCallRoomsListItem key={room.roomId} room={room} />)}\n    </>\n  );\n};\n\nexport default GroupCallRoomsList;\n","import React, { useEffect } from 'react';\nimport logo from '../resources/logo.png';\nimport ActiveUsersList from './components/ActiveUsersList/ActiveUsersList';\nimport * as webRTCHandler from '../utils/webRTC/webRTCHandler';\nimport * as webRTCGroupHandler from '../utils/webRTC/webRTCGroupCallHandler';\nimport DirectCall from './components/DirectCall/DirectCall';\nimport { connect } from 'react-redux';\nimport DashboardInformation from './components/DashboardInformation/DashboardInformation';\nimport { callStates } from '../store/actions/callActions';\nimport GroupCallRoomsList from './components/GroupCallRoomsList/GroupCallRoomsList';\nimport './Dashboard.css';\n\nconst Dashboard = ({ username, callState }) => {\n  useEffect(() => {\n    webRTCHandler.getLocalStream();\n    webRTCGroupHandler.connectWithMyPeer();\n  }, []);\n\n  return (\n    <div className='dashboard_container background_main_color'>\n      <div className='dashboard_left_section'>\n        <div className='dashboard_content_container'>\n          <DirectCall />\n          {callState !== callStates.CALL_IN_PROGRESS && <DashboardInformation username={username} />}\n        </div>\n        <div className='dashboard_rooms_container background_secondary_color'>\n          <GroupCallRoomsList />\n        </div>\n      </div>\n      <div className='dashboard_right_section background_secondary_color'>\n        <div className='dashboard_active_users_list'>\n          <ActiveUsersList />\n        </div>\n        <div className='dashboard_logo_container'>\n          <img className='dashboard_logo_image' src={logo} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ call, dashboard }) => ({\n  ...call,\n  ...dashboard\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","let myPeer;\n\nexport const connectWithMyPeer = () => {\n  myPeer = new window.Peer(undefined, {\n    path: '/peerjs',\n    host: '/',\n    port: '5000'\n  });\n\n  myPeer.on('open', (id) => {\n    console.log('succesfully connected with peer server');\n    console.log(id);\n  });\n};\n","import React from 'react';\n\nconst UsernameInput = (props) => {\n  const { username, setUsername } = props;\n\n  return (\n    <div className='login-page_input_container'>\n      <input\n        placeholder='Enter your name'\n        type='text'\n        value={username}\n        onChange={(event) => { setUsername(event.target.value); }}\n        className='login-page_input background_main_color text_main_color'\n      />\n    </div>\n  );\n};\n\nexport default UsernameInput;\n","import React from 'react';\n\nconst SubmitButton = ({ handleSubmitButtonPressed }) => {\n  return (\n    <div className='login-page_button_container'>\n      <button\n        className='login-page_button background_main_color text_main_color'\n        onClick={handleSubmitButtonPressed}\n      >\n        Start using VideoTalker\n      </button>\n    </div>\n\n  );\n};\n\nexport default SubmitButton;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport logo from '../resources/logo.png';\nimport UsernameInput from './components/UsernameInput';\nimport SubmitButton from './components/SubmitButton';\nimport { useHistory } from 'react-router-dom';\nimport { setUsername } from '../store/actions/dashboardActions';\nimport { registerNewUser } from '../utils/wssConnection/wssConnection';\nimport './LoginPage.css';\n\nconst LoginPage = ({ saveUsername }) => {\n  const [username, setUsername] = useState('');\n\n  const history = useHistory();\n\n  const handleSubmitButtonPressed = () => {\n    registerNewUser(username);\n    saveUsername(username);\n    history.push('/dashboard');\n  };\n\n  return (\n    <div className='login-page_container background_main_color'>\n      <div className='login-page_login_box background_secondary_color'>\n        <div className='login-page_logo_container'>\n          <img className='login-page_logo_image' src={logo} alt='VideoTalker' />\n        </div>\n        <div className='login-page_title_container'>\n          <h2>Get on Board</h2>\n        </div>\n        <UsernameInput username={username} setUsername={setUsername} />\n        <SubmitButton handleSubmitButtonPressed={handleSubmitButtonPressed} />\n      </div>\n    </div>\n  );\n};\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    saveUsername: username => dispatch(setUsername(username))\n  };\n};\n\nexport default connect(null, mapActionsToProps)(LoginPage);\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { connectWithWebSocket } from './utils/wssConnection/wssConnection';\nimport Dashboard from './Dashboard/Dashboard';\nimport LoginPage from './LoginPage/LoginPage';\n\nfunction App () {\n  useEffect(() => {\n    connectWithWebSocket();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/dashboard'>\n          <Dashboard />\n        </Route>\n        <Route path='/'>\n          <LoginPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}