{"version":3,"sources":["utils/webRTC/webRTCHandler.js","utils/webRTC/webRTCGroupCallHandler.js","utils/wssConnection/wssConnection.js","store/actions/dashboardActions.js","store/reducers/dashboardReducer.js","store/actions/callActions.js","store/reducers/callReducer.js","store/reducer.js","store/store.js","resources/logo.png","resources/userAvatar.png","Dashboard/components/ActiveUsersList/ActiveUsersListItem.js","Dashboard/components/ActiveUsersList/ActiveUsersList.js","Dashboard/components/LocalVideoView/LocalVideoView.js","Dashboard/components/RemoteVideoView/RemoteVideoView.js","Dashboard/components/CallRejectedDialog/CallRejectedDialog.js","Dashboard/components/IncomingCallDialog/IncomingCallDialog.js","Dashboard/components/CallingDialog/CallingDialog.js","Dashboard/components/ConversationButtons/ConversationButton.js","Dashboard/components/ConversationButtons/ConversationButtons.js","Dashboard/components/Messenger/MessageDisplayer.js","Dashboard/components/Messenger/Messenger.js","Dashboard/components/DirectCall/DirectCall.js","Dashboard/components/DashboardInformation/DashboardInformation.js","Dashboard/components/GroupCallRoomsList/GroupCallRoomsListItem.js","Dashboard/components/GroupCallRoomsList/GroupCallRoomsList.js","Dashboard/components/GroupCallButton/GroupCallButton.js","Dashboard/components/GroupCallRoom/GroupCallVideo.js","Dashboard/components/GroupCallRoom/GroupCallRoom.js","Dashboard/components/GroupCall/GroupCall.js","Dashboard/Dashboard.js","LoginPage/components/UsernameInput.js","LoginPage/components/SubmitButton.js","LoginPage/LoginPage.js","App.js","index.js"],"names":["connectedUserSocketId","peerConnection","dataChannel","screenSharingStream","myPeer","myPeerId","groupCallRoomId","socket","DASHBOARD_SET_USERNAME","DASHBOARD_SET_ACTIVE_USERS","DASHBOARD_SET_GROUP_CALL_ROOMS","initState","username","activeUsers","groupCallRooms","reducer","state","action","type","dashboardActions","callStates","CALL_SET_LOCAL_STREAM","CALL_SET_CALL_STATE","CALL_SET_CALLING_DIALOG_VISIBLE","CALL_SET_CALLER_USERNAME","CALL_SET_CALL_REJECTED","CALL_SET_REMOTE_STREAM","CALL_SET_LOCAL_MICROPHONE_ENABLED","CALL_SET_LOCAL_CAMERA_ENABLED","CALL_SET_SCREEN_SHARING_ACTIVE","CALL_RESET_CALL_STATE","CALL_SET_GROUP_CALL_ACTIVE","CALL_SET_GROUP_CALL_STREAMS","CALL_CLEAR_GROUP_CALL_DATA","CALL_SET_CHAT_MESSAGE","setCallState","callState","setCallingDialogVisible","visible","setCallRejected","callRejectedDetails","callRejected","rejected","reason","setLocalMicrophoneEnabled","enabled","setLocalCameraEnabled","setScreenSharingActive","active","setGroupCallActive","setGroupCallIncomingStreams","groupCallStreams","setMessage","messageReceived","messageContent","message","received","content","localStream","callingDialogVisible","callerUsername","remoteStream","localCameraEnabled","localMicrophoneEnabled","screenSharingActive","groupCallActive","callActions","combineReducers","dashboard","dashboardReducer","call","callReducer","store","createStore","mainReducer","composeWithDevTools","preOfferAnswers","defaultConstrains","video","width","height","audio","configuration","iceServers","urls","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","dispatch","createPeerConnection","catch","err","console","log","RTCPeerConnection","getState","getTracks","track","addTrack","ontrack","streams","ondatachannel","event","channel","onopen","onmessage","data","createDataChannel","onicecandidate","candidate","wss","onconnectionstatechange","connectionState","handlePreOffer","checkIfCallIsPossible","callerSocketId","answer","sendOffer","a","createOffer","offer","setLocalDescription","calleeSocketId","handleOffer","setRemoteDescription","createAnswer","handleAnswer","handleCandidate","addIceCandidate","error","switchForScreenSharingStream","getDisplayMedia","senders","getSenders","find","sender","kind","getVideoTracks","replaceTrack","forEach","stop","hangUp","resetCallDataAfterHangUp","close","resetCallData","getAudioTracks","groupCallHost","connectWithMyPeer","window","Peer","undefined","path","host","port","on","id","incomingStream","addVideoStream","clearGroupData","destroy","broadcastEventTypes","connectWithWebSocket","socketClient","handleBroadcastEvents","webRTCHandler","rejectionReason","peerId","webRTCGroupCallHandler","filter","streamId","sendPreOffer","emit","sendPreOfferAnswer","sendWebRTCOffer","sendWebRTCAnswer","sendWebRTCCandidate","sendUserHangedUp","registerGroupCall","userWantsToJoinGroupCall","userLeftGroupCall","groupCallClosedByHost","activeUser","socketId","room","activeGroupCallRoomId","roomId","ActiveUsersListItem","props","className","onClick","calleeDetails","callee","caller","src","userAvatar","connect","map","styles","videoContainer","borderRadius","position","top","right","videoElement","LocalVideoView","localVideoRef","useRef","useEffect","localVideo","current","srcObject","onloadedmetadata","play","style","ref","autoPlay","muted","remoteVideoRef","remoteVideo","CallRejectedDialog","hideCallRejectedDialog","setTimeout","IncomingCallDialog","buttonContainer","marginTop","border","display","alignItems","justifyContent","CallingDialog","fill","button","textDecoration","backgroundColor","marginLeft","boxShadow","borderImage","borderStyle","borderWidth","outline","ConversationButton","onClickHandler","children","bottom","left","icon","ConversationButtons","setCameraEnabled","setMicrophoneEnabled","groupCall","micEnabled","cameraEnabled","MessageDisplayer","Messenger","setDirectCallMessage","useState","inputValue","setInputValue","value","onChange","e","target","onKeyDown","keyCode","send","sendMessageUsingDataChannel","placeholder","RemoteVideoView","DashboardInformation","GroupCallRoomsListItem","hostSocketId","localStreamId","hostName","GroupCallButton","label","GroupCallVideo","videoRef","remoteGroupCallVideo","GroupCallRoom","webRTCGroupHandler","logo","UsernameInput","setUsername","SubmitButton","handleSubmitButtonPressed","saveUsername","history","useHistory","alt","registerNewUser","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yZA0BIA,EACAC,EACAC,EAyKAC,EChMAC,EACAC,EACAC,ECMAC,E,uDCbSC,EAAyB,yBACzBC,EAA6B,6BAC7BC,EAAiC,iCCAxCC,EAAY,CAChBC,SAAU,GACVC,YAAa,GACbC,eAAgB,IA0BHC,EAvBC,WAAgC,IAA/BC,EAA8B,uDAAtBL,EAAWM,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IAEEJ,SAAUK,EAAOL,WAErB,KAAKO,EACH,OAAO,2BACFH,GADL,IAEEH,YAAaI,EAAOJ,cAExB,KAAKM,EACH,OAAO,2BACFH,GADL,IAEEF,eAAgBG,EAAOH,iBAE3B,QACE,OAAOE,IC1BAI,EAEK,iBAFLA,EAGK,iBAHLA,EAIO,mBAGPC,EAAwB,wBACxBC,EAAsB,sBACtBC,EAAkC,kCAClCC,EAA2B,2BAC3BC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAoC,oCACpCC,EAAgC,gCAChCC,EAAiC,iCACjCC,EAAwB,wBACxBC,EAA6B,kCAC7BC,EAA8B,8BAC9BC,EAA6B,6BAC7BC,EAAwB,wBAUxBC,EAAe,SAACC,GAC3B,MAAO,CACLlB,KAAMI,EACNc,cAISC,EAA0B,SAACC,GACtC,MAAO,CACLpB,KAAMK,EACNe,YAYSC,EAAkB,SAACC,GAC9B,MAAO,CACLtB,KAAMO,EACNgB,aAAc,CACZC,SAAUF,EAAoBE,SAC9BC,OAAQH,EAAoBG,UAarBC,EAA4B,SAACC,GACxC,MAAO,CACL3B,KAAMS,EACNkB,YAISC,EAAwB,SAACD,GACpC,MAAO,CACL3B,KAAMU,EACNiB,YAISE,EAAyB,SAACC,GACrC,MAAO,CACL9B,KAAMW,EACNmB,WAWSC,EAAqB,SAACD,GACjC,MAAO,CACL9B,KAAMa,EACNiB,WAISE,EAA8B,SAACC,GAC1C,MAAO,CACLjC,KAAMc,EACNmB,qBAUSC,EAAa,SAACC,EAAiBC,GAC1C,MAAO,CACLpC,KAAMgB,EACNqB,QAAS,CACPC,SAAUH,EACVI,QAASH,KCzHT3C,EAAY,CAChB+C,YAAa,KACbtB,UDHkB,mBCIlBuB,sBAAsB,EACtBC,eAAgB,GAChBnB,aAAc,CACZC,UAAU,EACVC,OAAQ,IAEVkB,aAAc,KACdC,oBAAoB,EACpBC,wBAAwB,EACxBC,qBAAqB,EACrBC,iBAAiB,EACjBd,iBAAkB,GAClBI,QAAS,CACPC,UAAU,EACVC,QAAS,KA2FE1C,EAvFC,WAAgC,IAA/BC,EAA8B,uDAAtBL,EAAWM,EAAW,uCAC7C,OAAQA,EAAOC,MACb,KAAKgD,EACH,OAAO,2BACFlD,GADL,IAEE0C,YAAazC,EAAOyC,cAExB,KAAKQ,EACH,OAAO,2BACFlD,GADL,IAEEoB,UAAWnB,EAAOmB,YAEtB,KAAK8B,EACH,OAAO,2BACFlD,GADL,IAEE2C,qBAAsB1C,EAAOqB,UAEjC,KAAK4B,EACH,OAAO,2BACFlD,GADL,IAEE4C,eAAgB3C,EAAO2C,iBAE3B,KAAKM,EACH,OAAO,2BACFlD,GADL,IAEEyB,aAAcxB,EAAOwB,eAEzB,KAAKyB,EACH,OAAO,2BACFlD,GADL,IAEE6C,aAAc5C,EAAO4C,eAEzB,KAAKK,EACH,OAAO,2BACFlD,GADL,IAEE8C,mBAAoB7C,EAAO4B,UAE/B,KAAKqB,EACH,OAAO,2BACFlD,GADL,IAEE+C,uBAAwB9C,EAAO4B,UAEnC,KAAKqB,EACH,OAAO,2BACFlD,GADL,IAEEgD,oBAAqB/C,EAAO+B,SAEhC,KAAKkB,EACH,OAAO,2BACFlD,GADL,IAEE6C,aAAc,KACdG,qBAAqB,EACrBJ,eAAgB,GAChBG,wBAAwB,EACxBD,oBAAoB,EACpBH,sBAAsB,IAE1B,KAAKO,EACH,OAAO,2BACFlD,GADL,IAEEiD,gBAAiBhD,EAAO+B,SAE5B,KAAKkB,EACH,OAAO,2BACFlD,GADL,IAEEmC,iBAAkBlC,EAAOkC,mBAE7B,KAAKe,EACH,OAAO,2BACFlD,GADL,IAEEiD,iBAAiB,EACjBd,iBAAkB,GAClBf,UAAW8B,EACXH,wBAAwB,EACxBD,oBAAoB,IAExB,KAAKI,EACH,OAAO,2BACFlD,GADL,IAEEuC,QAAStC,EAAOsC,UAEpB,QACE,OAAOvC,ICrGEmD,4BAAgB,CAC7BC,UAAWC,EACXC,KAAMC,I,QCGOC,EALDC,sBACZC,EACAC,iC,4FRDIC,GACW,gBADXA,GAEW,gBAFXA,GAGgB,qBAGhBC,GAAoB,CACxBC,MAAO,CACLC,MAAO,IACPC,OAAQ,KAEVC,OAAO,GAGHC,GAAgB,CACpBC,WAAY,CAAC,CACXC,KAAM,kCASGC,GAAiB,WAC5BC,UAAUC,aAAaC,aAAaX,IACjCY,MAAK,SAAAC,GACJlB,EAAMmB,SKVH,CACLzE,KAAMG,EACNqC,YLQgCgC,IAC9BlB,EAAMmB,SAASxD,EAAaf,IAC5BwE,QAEDC,OAAM,SAAAC,GACLC,QAAQC,IAAI,kEACZD,QAAQC,IAAIF,OAKZF,GAAuB,WAC3B3F,EAAiB,IAAIgG,kBAAkBf,IAEvC,IAHiC,EAG3BxB,EAAcc,EAAM0B,WAAW5B,KAAKZ,YAHT,eAKbA,EAAYyC,aALC,IAKjC,2BAA6C,CAAC,IAAnCC,EAAkC,QAC3CnG,EAAeoG,SAASD,EAAO1C,IANA,8BASjCzD,EAAeqG,QAAU,YAA4B,IAAfZ,EAAc,eAAxBa,QAAwB,MAClD/B,EAAMmB,SKSD,CACLzE,KAAMQ,EACNmC,aLX+B6B,KAIjCzF,EAAeuG,cAAgB,SAACC,GAC9B,IAAMvG,EAAcuG,EAAMC,QAE1BxG,EAAYyG,OAAS,WACnBZ,QAAQC,IAAI,8DAGd9F,EAAY0G,UAAY,SAACH,GACvBjC,EAAMmB,SAASvC,GAAW,EAAMqD,EAAMI,UAI1C3G,EAAcD,EAAe6G,kBAAkB,SAEnCH,OAAS,WACnBZ,QAAQC,IAAI,0CAGd/F,EAAe8G,eAAiB,SAACN,GAC/BV,QAAQC,IAAI,uCACRS,EAAMO,WACRC,GAAwB,CACtBD,UAAWP,EAAMO,UACjBhH,sBAAuBA,KAK7BC,EAAeiH,wBAA0B,SAACT,GACD,cAAnCxG,EAAekH,iBACjBpB,QAAQC,IAAI,2CAiBLoB,GAAiB,SAACP,GK7DE,IAACjD,EL8D5ByD,MACFrH,EAAwB6G,EAAKS,eAC7B9C,EAAMmB,UKhEwB/B,ELgEGiD,EAAKjD,eK/DjC,CACL1C,KAAMM,EACNoC,oBL8DAY,EAAMmB,SAASxD,EAAaf,KAE5B6F,GAAuB,CACrBK,eAAgBT,EAAKS,eACrBC,OAAQ3C,MA2CR4C,GAAS,yCAAG,6BAAAC,EAAA,sEACIxH,EAAeyH,cADnB,cACVC,EADU,gBAEV1H,EAAe2H,oBAAoBD,GAFzB,OAGhBV,GAAoB,CAClBY,eAAgB7H,EAChB2H,MAAOA,IALO,2CAAH,qDASFG,GAAW,yCAAG,WAAOjB,GAAP,gBAAAY,EAAA,sEACnBxH,EAAe8H,qBAAqBlB,EAAKc,OADtB,uBAEJ1H,EAAe+H,eAFX,cAEnBT,EAFmB,gBAGnBtH,EAAe2H,oBAAoBL,GAHhB,OAIzBN,GAAqB,CACnBK,eAAgBtH,EAChBuH,OAAQA,IANe,2CAAH,sDAUXU,GAAY,yCAAG,WAAOpB,GAAP,UAAAY,EAAA,sEACpBxH,EAAe8H,qBAAqBlB,EAAKU,QADrB,2CAAH,sDAIZW,GAAe,yCAAG,WAAOrB,GAAP,UAAAY,EAAA,sEAE3B1B,QAAQC,IAAI,yBAFe,SAGrB/F,EAAekI,gBAAgBtB,EAAKG,WAHf,sDAK3BjB,QAAQqC,MAAM,0DAAd,MAL2B,wDAAH,sDASff,GAAwB,WACnC,OAA0C,OAAtC7C,EAAM0B,WAAW5B,KAAKZ,aAC1Bc,EAAM0B,WAAW5B,KAAKlC,YAAchB,GASzBiH,GAA4B,yCAAG,iCAAAZ,EAAA,yDACrCjD,EAAM0B,WAAW5B,KAAKN,oBADe,0CAGVsB,UAAUC,aAAa+C,gBAAgB,CAAExD,OAAO,IAHtC,OAGtC3E,EAHsC,OAItCqE,EAAMmB,SAAS5C,GAAuB,IAChCwF,EAAUtI,EAAeuI,aAChBD,EAAQE,MAAK,SAAAC,GAAM,OAAIA,EAAOtC,MAAMuC,MAAQxI,EAAoByI,iBAAiB,GAAGD,QAC5FE,aAAa1I,EAAoByI,iBAAiB,IAPnB,kDAStC7C,QAAQqC,MAAM,yDAAd,MATsC,gCAYlC1E,EAAcc,EAAM0B,WAAW5B,KAAKZ,YACpC6E,EAAUtI,EAAeuI,aAChBD,EAAQE,MAAK,SAAAC,GAAM,OAAIA,EAAOtC,MAAMuC,MAAQjF,EAAYkF,iBAAiB,GAAGD,QACpFE,aAAanF,EAAYkF,iBAAiB,IACjDpE,EAAMmB,SAAS5C,GAAuB,IACtC5C,EAAoBgG,YAAY2C,SAAQ,SAAA1C,GAAK,OAAIA,EAAM2C,UAjBf,0DAAH,qDA0B5BC,GAAS,WACpB/B,GAAqB,CACnBjH,sBAAuBA,IAGzBiJ,MAGIA,GAA2B,WAC/BhJ,EAAeiJ,QACfjJ,EAAiB,KACjB2F,KACAuD,KAEA,IAAMzF,EAAcc,EAAM0B,WAAW5B,KAAKZ,YAC1CA,EAAYkF,iBAAiB,GAAG/F,SAAU,EAC1Ca,EAAY0F,iBAAiB,GAAGvG,SAAU,EAEtC2B,EAAM0B,WAAW5B,KAAKN,qBACxB7D,EAAoBgG,YAAY2C,SAAQ,SAAA1C,GACtCA,EAAM2C,UAIVvE,EAAMmB,SK5JC,CACLzE,KAAMY,KL8JGqH,GAAgB,WAC3BnJ,EAAwB,KACxBwE,EAAMmB,SAASxD,EAAaf,K,SCtP1BiI,IAAgB,EAEPC,GAAoB,YAC/BlJ,EAAS,IAAImJ,OAAOC,UAAKC,EAAW,CAClCC,KAAM,UACNC,KAAM,IACNC,KAAM,UAGDC,GAAG,QAAQ,SAACC,GACjB/D,QAAQC,IAAI,0CACZ3F,EAAWyJ,KAGb1J,EAAOyJ,GAAG,QAAQ,SAAAvF,GAChBA,EAAKiD,OAAO/C,EAAM0B,WAAW5B,KAAKZ,aAClCY,EAAKuF,GAAG,UAAU,SAAAE,GACAvF,EAAM0B,WAAW5B,KAAKnB,iBACfsF,MAAK,SAAA/C,GAAM,OAAIA,EAAOoE,KAAOC,EAAeD,OAGjEE,GAAeD,UA8DVE,GAAiB,WAC5B3J,EAAkB,KAClB+I,GAAgB,KAChB7E,EAAMmB,SImBC,CACLzE,KAAMe,IJnBR7B,EAAO8J,UACPZ,KAEA,IAAM5F,EAAcc,EAAM0B,WAAW5B,KAAKZ,YAC1CA,EAAYkF,iBAAiB,GAAG/F,SAAU,EAC1Ca,EAAY0F,iBAAiB,GAAGvG,SAAU,GAUtCmH,GAAiB,SAACD,GACtB,IAAM5G,EAAgB,uBACjBqB,EAAM0B,WAAW5B,KAAKnB,kBADL,CAEpB4G,IAGFvF,EAAMmB,SAASzC,EAA4BC,KC5GvCgH,GACU,eADVA,GAEc,mBAKPC,GAAuB,YAClC7J,EAAS8J,KAVI,oDAYNR,GAAG,cAAc,WACtB9D,QAAQC,IAAI,yCACZD,QAAQC,IAAIzF,EAAOuJ,OAGrBvJ,EAAOsJ,GAAG,aAAa,SAAChD,GACtByD,GAAsBzD,MAIxBtG,EAAOsJ,GAAG,aAAa,SAAChD,GACtB0D,GAA6B1D,MAG/BtG,EAAOsJ,GAAG,oBAAoB,SAAChD,IFuGG,SAACA,GAMjC,IAAI2D,EALNhG,EAAMmB,SAAStD,GAAwB,IAEnCwE,EAAKU,SAAW3C,GAClB4C,MAIEgD,EADE3D,EAAKU,SAAW3C,GACA,mDAEA,8BAEpBJ,EAAMmB,SAASpD,EAAgB,CAC7BG,UAAU,EACVC,OAAQ6H,KAGVrB,MEvHAoB,CAAmC1D,MAGrCtG,EAAOsJ,GAAG,gBAAgB,SAAChD,GACzB0D,GAA0B1D,MAG5BtG,EAAOsJ,GAAG,iBAAiB,SAAChD,GAC1B0D,GAA2B1D,MAG7BtG,EAAOsJ,GAAG,oBAAoB,SAAChD,GAC7B0D,GAA8B1D,MAGhCtG,EAAOsJ,GAAG,kBAAkB,WF8K5BZ,QExKA1I,EAAOsJ,GAAG,2BAA2B,SAAChD,IDQR,SAACA,GAC/B,IAAMnD,EAAcc,EAAM0B,WAAW5B,KAAKZ,YAE7BtD,EAAOkE,KAAKuC,EAAK4D,OAAQ/G,GAEjCmG,GAAG,UAAU,SAACE,GACDvF,EAAM0B,WAAW5B,KAAKnB,iBACfsF,MAAK,SAAA/C,GAAM,OAAIA,EAAOoE,KAAOC,EAAeD,OAGjEE,GAAeD,MCjBjBW,CAAwC7D,MAG1CtG,EAAOsJ,GAAG,wBAAwB,SAAChD,ID6CD,SAACA,GACnC,IAAM1D,EAAmBqB,EAAM0B,WAAW5B,KAAKnB,iBAAiBwH,QAC9D,SAAAjF,GAAM,OAAIA,EAAOoE,KAAOjD,EAAK+D,YAE/BpG,EAAMmB,SAASzC,EAA4BC,IChDzCuH,CAA4C7D,OAanCgE,GAAe,SAAChE,GAC3BtG,EAAOuK,KAAK,YAAajE,IAGdkE,GAAqB,SAAClE,GACjCtG,EAAOuK,KAAK,mBAAoBjE,IAGrBmE,GAAkB,SAACnE,GAC9BtG,EAAOuK,KAAK,eAAgBjE,IAGjBoE,GAAmB,SAACpE,GAC/BtG,EAAOuK,KAAK,gBAAiBjE,IAGlBqE,GAAsB,SAACrE,GAClCtG,EAAOuK,KAAK,mBAAoBjE,IAGrBsE,GAAmB,SAACtE,GAC/BtG,EAAOuK,KAAK,iBAAkBjE,IAKnBuE,GAAoB,SAACvE,GAChCtG,EAAOuK,KAAK,sBAAuBjE,IAGxBwE,GAA2B,SAACxE,GACvCtG,EAAOuK,KAAK,0BAA2BjE,IAG5ByE,GAAoB,SAACzE,GAChCtG,EAAOuK,KAAK,uBAAwBjE,IAGzB0E,GAAwB,SAAC1E,GACpCtG,EAAOuK,KAAK,4BAA6BjE,IAGrCyD,GAAwB,SAACzD,GAC7B,OAAQA,EAAKJ,OACX,KAAK0D,GACH,IAAMtJ,EAAcgG,EAAKhG,YAAY8J,QAAO,SAAAa,GAAU,OAAIA,EAAWC,WAAalL,EAAOuJ,MACzFtF,EAAMmB,SC1GkB,SAAC9E,GAC7B,MAAO,CACLK,KAAMT,EACNI,eDuGiBM,CAAgCN,IAC/C,MACF,KAAKsJ,GACH,IAAMrJ,EAAiB+F,EAAK/F,eAAe6J,QAAO,SAAAe,GAAI,OAAIA,EAAKD,WAAalL,EAAOuJ,MAC7E6B,IDDNnH,EAAM0B,WAAW5B,KAAKL,iBACjB3D,ECEL,GAAIqL,EACW7K,EAAe2H,MAAK,SAAAiD,GAAI,OAAIA,EAAKE,SAAWD,MAEvDjB,KAGJlG,EAAMmB,SC9GiB,SAAC7E,GAC5B,MAAO,CACLI,KAAMR,EACNI,kBD2GiBK,CAA+BL,MOlIrC,OAA0B,iCCA1B,OAA0B,uC,QCwB1B+K,GAnBa,SAACC,GAC3B,IAAQN,EAA0BM,EAA1BN,WAAYpJ,EAAc0J,EAAd1J,UAQpB,OACE,uBAAK2J,UAAU,wBAAwBC,QAPX,WXqFD,IAACC,EWpFxB7J,IAAchB,IXqFpBpB,GAD8BiM,EWnFVT,GXoFkBC,SACtCjH,EAAMmB,SAASxD,EAAaf,IAC5BoD,EAAMmB,SAAStD,GAAwB,IACvC4E,GAAiB,CACfiF,OAAQD,EACRE,OAAQ,CACNvL,SAAU4D,EAAM0B,WAAW9B,UAAUxD,cWrFvC,UACE,sBAAKmL,UAAU,mCAAf,SACE,sBAAKA,UAAU,yBAAyBK,IAAKC,OAE/C,uBAAMN,UAAU,wBAAhB,SAAyCP,EAAW5K,eCK3C0L,I,OAAAA,aALS,SAAC,GAAD,IAAGlI,EAAH,EAAGA,UAAWE,EAAd,EAAcA,KAAd,mBAAC,eACpBF,GACAE,KAGUgI,EAlBS,SAAC,GAAgC,IAA9BzL,EAA6B,EAA7BA,YAAauB,EAAgB,EAAhBA,UACtC,OACE,sBAAK2J,UAAU,6BAAf,SACGlL,EAAY0L,KAAI,SAACf,GAAD,OACf,eAAC,GAAD,CAEEA,WAAYA,EACZpJ,UAAWA,GAFNoJ,EAAWC,mBCTpBe,GAAS,CACbC,eAAgB,CACd1H,MAAO,QACPC,OAAQ,QACR0H,aAAc,MACdC,SAAU,WACVC,IAAK,KACLC,MAAO,OAETC,aAAc,CACZ/H,MAAO,OACPC,OAAQ,SA0BG+H,GAtBQ,SAAAjB,GACrB,IAAQpI,EAAgBoI,EAAhBpI,YACFsJ,EAAgBC,mBAatB,OAXAC,qBAAU,WACR,GAAIxJ,EAAa,CACf,IAAMyJ,EAAaH,EAAcI,QACjCD,EAAWE,UAAY3J,EAEvByJ,EAAWG,iBAAmB,WAC5BH,EAAWI,WAGd,CAAC7J,IAGF,sBAAK8J,MAAOhB,GAAOC,eAAgBV,UAAU,6BAA7C,SACE,wBAAOyB,MAAOhB,GAAOM,aAAcW,IAAKT,EAAeU,UAAQ,EAACC,OAAK,OChCrEnB,GAAS,CACbC,eAAgB,CACd1H,MAAO,OACPC,OAAQ,QAEV8H,aAAc,CACZ/H,MAAO,OACPC,OAAQ,SA0BG+H,GAtBQ,SAAAjB,GACrB,IAAQjI,EAAiBiI,EAAjBjI,aACF+J,EAAiBX,mBAavB,OAXAC,qBAAU,WACR,GAAIrJ,EAAc,CAChB,IAAMgK,EAAcD,EAAeR,QACnCS,EAAYR,UAAYxJ,EAExBgK,EAAYP,iBAAmB,WAC7BO,EAAYN,WAGf,CAAC1J,IAGF,sBAAK2J,MAAOhB,GAAOC,eAAnB,SACE,wBAAOe,MAAOhB,GAAOM,aAAcW,IAAKG,EAAgBF,UAAQ,OCPvDI,I,OAnBY,SAAC,GAAwC,IAAtCnL,EAAqC,EAArCA,OAAQoL,EAA6B,EAA7BA,uBAUpC,OATAb,qBAAU,WACRc,YAAW,WACTD,EAAuB,CACrBrL,UAAU,EACVC,OAAQ,OAET,CAAC,QACH,IAGD,sBAAKoJ,UAAU,kDAAf,SACE,gCACGpJ,QCYMsL,I,OAxBY,SAAC,GAAwB,IAAtBrK,EAAqB,EAArBA,eAS5B,OACE,uBAAKmI,UAAU,gDAAf,UACE,uBAAMA,UAAU,iCAAhB,SAAkDnI,IAClD,uBAAKmI,UAAU,sCAAf,UACE,yBAAQA,UAAU,mCAAmCC,QAZzB,WhBiHlC/E,GAAuB,CACrBK,eAAgBtH,EAChBuH,OAAQ3C,KAGVJ,EAAMmB,SAASxD,EAAaf,KgB1GtB,oBAGA,yBAAQ2K,UAAU,mCAAmCC,QAXzB,WhBsHlC/E,GAAuB,CACrBK,eAAgBtH,EAChBuH,OAAQ3C,KAEVuE,MgB/GM,4B,kBChBFqD,GAAS,CACb0B,gBAAiB,CACfC,UAAW,OACXpJ,MAAO,OACPC,OAAQ,OACR0H,aAAc,OACd0B,OAAQ,oBACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAmBLC,GAfO,WAKpB,OACE,uBAAKzC,UAAU,mDAAf,UACE,4CACA,sBAAKyB,MAAOhB,GAAO0B,gBAAiBlC,QAPN,WAChChD,MAME,SACE,eAAC,KAAD,CAAWwE,MAAO,CAAEzI,MAAO,OAAQC,OAAQ,OAAQyJ,KAAM,mBCzB3DjC,GAAS,CACbkC,OAAQ,CACN3J,MAAO,OACPC,OAAQ,OACR0H,aAAc,OACd0B,OAAQ,oBACRO,eAAgB,OAChBC,gBAAiB,UACjBP,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBM,WAAY,OACZC,UAAW,OACXC,YAAa,OACbC,YAAa,OACbC,YAAa,MACbC,QAAS,SAaEC,GATY,SAACrD,GAC1B,IAAQsD,EAAmBtD,EAAnBsD,eACR,OACE,yBAAQ5B,MAAOhB,GAAOkC,OAAQ1C,QAASoD,EAAvC,SACGtD,EAAMuD,YCrBP7C,GAAS,CACb0B,gBAAiB,CACfG,QAAS,OACT1B,SAAU,WACV2C,OAAQ,MACRC,KAAM,OAERC,KAAM,CACJzK,MAAO,OACPC,OAAQ,OACRyJ,KAAM,YAqDKgB,GAjDa,SAAC3D,GAC3B,IACEpI,EAOEoI,EAPFpI,YACAI,EAMEgI,EANFhI,mBACAC,EAKE+H,EALF/H,uBACA2L,EAIE5D,EAJF4D,iBACAC,EAGE7D,EAHF6D,qBACA3L,EAEE8H,EAFF9H,oBACA4L,EACE9D,EADF8D,UAuBF,OACE,uBAAKpC,MAAOhB,GAAO0B,gBAAnB,UACE,eAAC,GAAD,CAAoBkB,eAtBO,WAC7B,IAAMS,EAAa9L,EACnBL,EAAY0F,iBAAiB,GAAGvG,SAAWgN,EAC3CF,GAAsBE,IAmBpB,SACG9L,EAAyB,eAAC,KAAD,CAAOyJ,MAAOhB,GAAOgD,OAAW,eAAC,KAAD,CAAUhC,MAAOhB,GAAOgD,UAElFI,GAAa,eAAC,GAAD,CAAoBR,eATL,WAChCpG,MAQiB,SACb,eAAC,KAAD,CAAWwE,MAAOhB,GAAOgD,SAE3B,eAAC,GAAD,CAAoBJ,eAtBU,WAChC,IAAMU,EAAgBhM,EACtBJ,EAAYkF,iBAAiB,GAAG/F,SAAWiN,EAC3CJ,GAAkBI,IAmBhB,SACGhM,EAAqB,eAAC,KAAD,CAAY0J,MAAOhB,GAAOgD,OAAW,eAAC,KAAD,CAAehC,MAAOhB,GAAOgD,UAExFI,GAAa,eAAC,GAAD,CAAoBR,eAnBE,WACvC/G,MAkBiB,SACZrE,EAAsB,eAAC,KAAD,CAAUwJ,MAAOhB,GAAOgD,OAAW,eAAC,KAAD,CAAchC,MAAOhB,GAAOgD,aCpD/EO,GARU,SAACjE,GACtB,OACI,sBAAKC,UAAU,oBAAf,SACKD,EAAMvI,WCiCJyM,I,OAhCG,SAAC,GAAuC,IAArCzM,EAAoC,EAApCA,QAAS0M,EAA2B,EAA3BA,qBAC1B,EAAoCC,mBAAS,IAA7C,oBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAPAlD,qBAAU,WACF3J,EAAQC,UACRwK,YAAW,WACPiC,GAAqB,EAAO,MAC7B,CAAC,QAET,CAAC1M,EAAQC,WAER,uCACI,wBACAuI,UAAU,iBACV7K,KAAK,OACLmP,MAAOF,EACPG,SAAU,SAACC,GAAOH,EAAcG,EAAEC,OAAOH,QACzCI,UArBqB,SAACF,GACR,KAAdA,EAAEG,WrBuP8B,SAACnN,GAC3CrD,EAAYyQ,KAAKpN,GqBvPPqN,CAA4BT,GAC5BC,EAAc,MAmBdS,YAAY,sBAEXtN,EAAQC,UAAY,eAAC,GAAD,CAAkBD,QAASA,EAAQE,eCsBrD6I,oBAff,YAA0C,IAAThI,EAAQ,EAARA,KAC/B,OAAO,eACFA,MAIP,SAA6BqB,GAC3B,MAAO,CACLoI,uBAAwB,SAACvL,GAAD,OAAyBmD,EAASpD,EAAgBC,KAC1EkN,iBAAkB,SAAC7M,GAAD,OAAa8C,EAAS7C,EAAsBD,KAC9D8M,qBAAsB,SAAC9M,GAAD,OAAa8C,EAAS/C,EAA0BC,KACtEoN,qBAAsB,SAACzM,EAAUC,GAAX,OAAuBkC,EAASvC,EAAWI,EAAUC,QAIhE6I,EA5CI,SAACR,GAClB,IACEpI,EASEoI,EATFpI,YACAG,EAQEiI,EARFjI,aACAzB,EAOE0J,EAPF1J,UACAwB,EAMEkI,EANFlI,eACAD,EAKEmI,EALFnI,qBACAlB,EAIEqJ,EAJFrJ,aACAsL,EAGEjC,EAHFiC,uBACAkC,EAEEnE,EAFFmE,qBACA1M,EACEuI,EADFvI,QAGF,OACE,uCACE,eAAC,GAAD,CAAgBG,YAAaA,IAC5BG,GAAgBzB,IAAchB,GAA+B,eAAC0P,GAAD,CAAiBjN,aAAcA,IAC5FpB,EAAaC,UAAY,eAAC,GAAD,CACxBC,OAAQF,EAAaE,OACrBoL,uBAAwBA,IAEzB3L,IAAchB,GAA6B,eAAC,GAAD,CAAoBwC,eAAgBA,IAC/ED,GAAwB,eAAC,GAAD,IACxBE,GAAgBzB,IAAchB,GAA+B,eAAC,GAAD,eAAyB0K,IACtFjI,GAAgBzB,IAAchB,GAA+B,eAAC,GAAD,CAAWmC,QAASA,EAAS0M,qBAAsBA,UCjBxGc,I,OAdc,SAAC,GAAkB,IAAhBnQ,EAAe,EAAfA,SAC9B,OACE,uBAAKmL,UAAU,gCAAf,UACE,wBAAMA,UAAU,4BAAhB,mBACSnL,EADT,8BAGA,uBAAMmL,UAAU,kCAAhB,uHCKSiF,GAZgB,SAAC,GAAc,IAAZtF,EAAW,EAAXA,KAKhC,OACE,sBAAKM,QALuB,YvB2CH,SAACiF,EAAcrF,GAC1C,IAAMlI,EAAcc,EAAM0B,WAAW5B,KAAKZ,YAC1CpD,EAAkBsL,EAElB3E,GAA6B,CAC3BwD,OAAQpK,EACR4Q,eACArF,SACAsF,cAAexN,EAAYoG,KAG7BtF,EAAMmB,SAAS1C,GAAmB,IAClCuB,EAAMmB,SAASxD,EAAaf,IuBtD1BsJ,CAAqCgB,EAAKD,SAAUC,EAAKE,SAIpBG,UAAU,8CAA/C,SACE,gCAAOL,EAAKyF,cCUH7E,I,OAAAA,aANc,SAAC,GAAD,IAAGlI,EAAH,EAAGA,UAAH,sBAEtBA,KAIQkI,EAfY,SAACR,GAC1B,IAAQhL,EAAmBgL,EAAnBhL,eACR,OACE,qCACGA,EAAeyL,KAAI,SAAAb,GAAI,OAAI,eAAC,GAAD,CAA0CA,KAAMA,GAAnBA,EAAKE,iBCGrDwF,I,OARS,SAAC,GAA+B,IAA7BhC,EAA4B,EAA5BA,eAAgBiC,EAAY,EAAZA,MACzC,OACE,yBAAQrF,QAASoD,EAAgBrD,UAAU,oBAA3C,SACGsF,MCLD7E,I,OAAS,CACbC,eAAgB,CACd1H,MAAO,QACPC,OAAQ,SAEV8H,aAAc,CACZ/H,MAAO,OACPC,OAAQ,UAsBGsM,GAlBQ,SAAC,GAAgB,IAAd5L,EAAa,EAAbA,OAClB6L,EAAWtE,mBAUjB,OARAC,qBAAU,WACR,IAAMsE,EAAuBD,EAASnE,QACtCoE,EAAqBnE,UAAY3H,EACjC8L,EAAqBlE,iBAAmB,WACtCkE,EAAqBjE,UAEtB,CAAC7H,IAGF,sBAAK8H,MAAOhB,GAAOC,eAAnB,SACE,wBAAOgB,IAAK8D,EAAU7D,UAAQ,EAACF,MAAOhB,GAAOM,kBCHpC2E,GAjBO,SAAC3F,GACrB,IAAQ3I,EAAqB2I,EAArB3I,iBACR,OACE,uBAAK4I,UAAU,4BAAf,UACE,uBAAMA,UAAU,mBAAhB,wBACA,sBAAKA,UAAU,8BAAf,SAEI5I,EAAiBoJ,KAAI,SAAA7G,GACnB,OAAO,eAAC,GAAD,CAAgCA,OAAQA,GAAnBA,EAAOoE,SAIzC,eAAC,GAAD,2BAAyBgC,GAAzB,IAAgC8D,WAAS,SCqBhCtD,gBAXc,SAAC,GAAD,IAAGhI,EAAH,EAAGA,KAAH,sBACxBA,MAGqB,SAACqB,GACzB,MAAO,CACL+J,iBAAkB,SAAA7M,GAAO,OAAI8C,EAAS7C,EAAsBD,KAC5D8M,qBAAsB,SAAA9M,GAAO,OAAI8C,EAAS/C,EAA0BC,QAIzDyJ,EAhCG,SAACR,GACjB,IAAQ1J,EAA8D0J,EAA9D1J,UAAWsB,EAAmDoI,EAAnDpI,YAAaO,EAAsC6H,EAAtC7H,gBAAsC6H,EAArB3I,iBAUjD,OACE,wCACIc,GAAmBP,GAAetB,IAAchB,GAChD,eAAC,GAAD,CAAiBgO,eAXJ,W5B0BnB/F,IAAgB,EAChBpC,GAAsB,CACpBrG,SAAU4D,EAAM0B,WAAW9B,UAAUxD,SACrC6J,OAAQpK,IAGVmE,EAAMmB,SAAS1C,GAAmB,IAClCuB,EAAMmB,SAASxD,EAAaf,K4BtBuBiQ,MAAM,gBACpDpN,GAAmB,eAAC,GAAD,eAAmB6H,IACtC7H,GAAmB,eAAC,GAAD,CAAiBmL,eATvB,W5BgEd/F,GACFpC,GAA0B,CACxBwD,OAAQpK,IAGV4G,GAAsB,CACpB2D,SAAUpG,EAAM0B,WAAW5B,KAAKZ,YAAYoG,GAC5C8B,OAAQtL,IAGZ2J,M4BjEoEoH,MAAM,qBC2B7D/E,I,OAAAA,aALS,SAAC,GAAD,IAAGhI,EAAH,EAAGA,KAAMF,EAAT,EAASA,UAAT,mBAAC,eACpBE,GACAF,KAGUkI,EAnCG,SAAC,GAA6B,IAA3B1L,EAA0B,EAA1BA,SAAUwB,EAAgB,EAAhBA,UAM7B,OALA8K,qBAAU,WACR3C,KACAmH,OACC,IAGD,uBAAK3F,UAAU,4CAAf,UACE,uBAAKA,UAAU,yBAAf,UACE,uBAAKA,UAAU,8BAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,IACC3J,IAAchB,GAA+B,eAAC,GAAD,CAAsBR,SAAUA,OAEhF,sBAAKmL,UAAU,uDAAf,SACE,eAAC,GAAD,SAGJ,uBAAKA,UAAU,qDAAf,UACE,sBAAKA,UAAU,8BAAf,SACE,eAAC,GAAD,MAEF,sBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,uBAAuBK,IAAKuF,iBCpBtCC,GAhBO,SAAC9F,GACrB,IAAQlL,EAA0BkL,EAA1BlL,SAAUiR,EAAgB/F,EAAhB+F,YAElB,OACE,sBAAK9F,UAAU,6BAAf,SACE,wBACE8E,YAAY,kBACZ3P,KAAK,OACLmP,MAAOzP,EACP0P,SAAU,SAAC7J,GAAYoL,EAAYpL,EAAM+J,OAAOH,QAChDtE,UAAU,8DCIH+F,GAdM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,0BACtB,OACE,sBAAKhG,UAAU,8BAAf,SACE,yBACEA,UAAU,0DACVC,QAAS+F,EAFX,wCCsCSzF,I,OAAAA,YAAQ,MANG,SAAC3G,GACzB,MAAO,CACLqM,aAAc,SAAApR,GAAQ,OAAI+E,E9BnCH,SAAC/E,GAC1B,MAAO,CACLM,KAAMV,EACNI,Y8BgCmCiR,CAAYjR,QAIpC0L,EAjCG,SAAC,GAAsB,IAApB0F,EAAmB,EAAnBA,aACnB,EAAgC9B,mBAAS,IAAzC,oBAAOtP,EAAP,KAAiBiR,EAAjB,KAEMI,EAAUC,eAQhB,OACE,sBAAKnG,UAAU,6CAAf,SACE,uBAAKA,UAAU,kDAAf,UACE,sBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,wBAAwBK,IAAKuF,GAAMQ,IAAI,kBAExD,sBAAKpG,UAAU,6BAAf,SACE,iDAEF,eAAC,GAAD,CAAenL,SAAUA,EAAUiR,YAAaA,IAChD,eAAC,GAAD,CAAcE,0BAhBc,Y/BgDL,SAACnR,GAC9BL,EAAOuK,KAAK,oBAAqB,CAC/BlK,SAAUA,EACV6K,SAAUlL,EAAOuJ,K+BlDjBsI,CAAgBxR,GAChBoR,EAAapR,GACbqR,EAAQI,KAAK,0BCYFC,OAnBf,WAKE,OAJApF,qBAAU,WACR9C,OACC,IAGD,eAAC,KAAD,UACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOV,KAAK,aAAZ,SACE,eAAC,GAAD,MAEF,eAAC,KAAD,CAAOA,KAAK,IAAZ,SACE,eAAC,GAAD,Y,OCfV6I,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUjO,MAAOA,EAAjB,SACE,eAAC,GAAD,QAGJkO,SAASC,eAAe,U","file":"static/js/main.3555115e.chunk.js","sourcesContent":["import store from '../../store/store';\nimport { setLocalStream, setCallState, callStates, setCallingDialogVisible, setCallerUsername, setCallRejected, setRemoteStream, setScreenSharingActive, resetCallDataState, setMessage } from '../../store/actions/callActions';\nimport * as wss from '../wssConnection/wssConnection';\n\n\nconst preOfferAnswers = {\n  CALL_ACCEPTED: 'CALL_ACCEPTED',\n  CALL_REJECTED: 'CALL_REJECTED',\n  CALL_NOT_AVAILABLE: 'CALL_NOT_AVAILABLE'\n};\n\nconst defaultConstrains = {\n  video: {\n    width: 480,\n    height: 360\n  },\n  audio: true\n};\n\nconst configuration = {\n  iceServers: [{\n    urls: 'stun:stun.l.google.com:13902'\n  }]\n};\n\n\nlet connectedUserSocketId;\nlet peerConnection;\nlet dataChannel;\n\nexport const getLocalStream = () => {\n  navigator.mediaDevices.getUserMedia(defaultConstrains)\n    .then(stream => {\n      store.dispatch(setLocalStream(stream));\n      store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n      createPeerConnection();\n    })\n    .catch(err => {\n      console.log('error occured when trying to get an access to get local stream');\n      console.log(err);\n    });\n}\n;\n\nconst createPeerConnection = () => {\n  peerConnection = new RTCPeerConnection(configuration);\n\n  const localStream = store.getState().call.localStream;\n\n  for (const track of localStream.getTracks()) {\n    peerConnection.addTrack(track, localStream);\n  }\n\n  peerConnection.ontrack = ({ streams: [stream] }) => {\n    store.dispatch(setRemoteStream(stream));\n  };\n\n  // incoming data channel messages\n  peerConnection.ondatachannel = (event) => {\n    const dataChannel = event.channel;\n\n    dataChannel.onopen = () => {\n      console.log('peer connection is ready to recieve data channel messages')\n    };\n\n    dataChannel.onmessage = (event) => {\n      store.dispatch(setMessage(true, event.data));\n    };\n  };\n\n  dataChannel = peerConnection.createDataChannel('chat');\n\n  dataChannel.onopen = () => {\n    console.log('chat data channel successfully opened')\n  }\n\n  peerConnection.onicecandidate = (event) => {\n    console.log('geeting candidates from stun server');\n    if (event.candidate) {\n      wss.sendWebRTCCandidate({\n        candidate: event.candidate,\n        connectedUserSocketId: connectedUserSocketId\n      });\n    }\n  };\n\n  peerConnection.onconnectionstatechange = (event) => {\n    if (peerConnection.connectionState === 'connected') {\n      console.log('succesfully connected with other peer');\n    }\n  };\n};\n\nexport const callToOtherUser = (calleeDetails) => {\n  connectedUserSocketId = calleeDetails.socketId;\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n  store.dispatch(setCallingDialogVisible(true));\n  wss.sendPreOffer({\n    callee: calleeDetails,\n    caller: {\n      username: store.getState().dashboard.username\n    }\n  });\n};\n\nexport const handlePreOffer = (data) => {\n  if (checkIfCallIsPossible()) {\n    connectedUserSocketId = data.callerSocketId;\n    store.dispatch(setCallerUsername(data.callerUsername));\n    store.dispatch(setCallState(callStates.CALL_REQUESTED));\n  } else {\n    wss.sendPreOfferAnswer({\n      callerSocketId: data.callerSocketId,\n      answer: preOfferAnswers.CALL_NOT_AVAILABLE\n    });\n  }\n};\n\nexport const acceptIncomingCallRequest = () => {\n  wss.sendPreOfferAnswer({\n    callerSocketId: connectedUserSocketId,\n    answer: preOfferAnswers.CALL_ACCEPTED\n  });\n\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n};\n\nexport const rejectIncomingCallRequest = () => {\n  wss.sendPreOfferAnswer({\n    callerSocketId: connectedUserSocketId,\n    answer: preOfferAnswers.CALL_REJECTED\n  });\n  resetCallData();\n};\n\nexport const handlePreOfferAnswer = (data) => {\n  store.dispatch(setCallingDialogVisible(false));\n\n  if (data.answer === preOfferAnswers.CALL_ACCEPTED) {\n    sendOffer();\n  } else {\n    let rejectionReason;\n    if (data.answer === preOfferAnswers.CALL_NOT_AVAILABLE) {\n      rejectionReason = 'Callee is not able to pick up the call right now';\n    } else {\n      rejectionReason = 'Call rejected by the callee';\n    }\n    store.dispatch(setCallRejected({\n      rejected: true,\n      reason: rejectionReason\n    }));\n\n    resetCallData();\n  }\n};\n\nconst sendOffer = async () => {\n  const offer = await peerConnection.createOffer();\n  await peerConnection.setLocalDescription(offer);\n  wss.sendWebRTCOffer({\n    calleeSocketId: connectedUserSocketId,\n    offer: offer\n  });\n};\n\nexport const handleOffer = async (data) => {\n  await peerConnection.setRemoteDescription(data.offer);\n  const answer = await peerConnection.createAnswer();\n  await peerConnection.setLocalDescription(answer);\n  wss.sendWebRTCAnswer({\n    callerSocketId: connectedUserSocketId,\n    answer: answer\n  });\n};\n\nexport const handleAnswer = async (data) => {\n  await peerConnection.setRemoteDescription(data.answer);\n};\n\nexport const handleCandidate = async (data) => {\n  try {\n    console.log('adding ice candidates');\n    await peerConnection.addIceCandidate(data.candidate);\n  } catch (err) {\n    console.error('error occured when trying to add received ice candidate', err);\n  }\n};\n\nexport const checkIfCallIsPossible = () => {\n  if (store.getState().call.localStream === null ||\n  store.getState().call.callState !== callStates.CALL_AVAILABLE) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nlet screenSharingStream;\n\nexport const switchForScreenSharingStream = async () => {\n  if (!store.getState().call.screenSharingActive) {\n    try {\n      screenSharingStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n      store.dispatch(setScreenSharingActive(true));\n      const senders = peerConnection.getSenders();\n      const sender = senders.find(sender => sender.track.kind == screenSharingStream.getVideoTracks()[0].kind);\n      sender.replaceTrack(screenSharingStream.getVideoTracks()[0]);\n    } catch (err) {\n      console.error('error occured when trying to get screen sharing stream', err);\n    }\n  } else {\n    const localStream = store.getState().call.localStream;\n    const senders = peerConnection.getSenders();\n    const sender = senders.find(sender => sender.track.kind == localStream.getVideoTracks()[0].kind);\n    sender.replaceTrack(localStream.getVideoTracks()[0]);\n    store.dispatch(setScreenSharingActive(false));\n    screenSharingStream.getTracks().forEach(track => track.stop());\n  }\n}\n;\n\nexport const handleUserHangedUp = () => {\n  resetCallDataAfterHangUp();\n};\n\nexport const hangUp = () => {\n  wss.sendUserHangedUp({\n    connectedUserSocketId: connectedUserSocketId\n  });\n\n  resetCallDataAfterHangUp();\n};\n\nconst resetCallDataAfterHangUp = () => {\n  peerConnection.close();\n  peerConnection = null;\n  createPeerConnection();\n  resetCallData();\n\n  const localStream = store.getState().call.localStream;\n  localStream.getVideoTracks()[0].enabled = true;\n  localStream.getAudioTracks()[0].enabled = true;\n\n  if (store.getState().call.screenSharingActive) {\n    screenSharingStream.getTracks().forEach(track => {\n      track.stop();\n    });\n  }\n\n  store.dispatch(resetCallDataState());\n};\n\nexport const resetCallData = () => {\n  connectedUserSocketId = null;\n  store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n};\n\nexport const sendMessageUsingDataChannel =  (message) => {\n  dataChannel.send(message);\n};","import * as wss from '../wssConnection/wssConnection';\nimport store from '../../store/store';\nimport { setGroupCallActive, setCallState, callStates, setGroupCallIncomingStreams, clearGroupCallData } from '../../store/actions/callActions';\n\n\nlet myPeer;\nlet myPeerId;\nlet groupCallRoomId;\nlet groupCallHost = false;\n\nexport const connectWithMyPeer = () => {\n  myPeer = new window.Peer(undefined, {\n    path: '/peerjs',\n    host: '/',\n    port: '5000'\n  });\n\n  myPeer.on('open', (id) => {\n    console.log('succesfully connected with peer server');\n    myPeerId = id;\n  });\n\n  myPeer.on('call', call => {\n    call.answer(store.getState().call.localStream);\n    call.on('stream', incomingStream => {\n      const streams = store.getState().call.groupCallStreams;\n      const stream = streams.find(stream => stream.id === incomingStream.id);\n\n      if (!stream) {\n        addVideoStream(incomingStream);\n      }\n    });\n  });\n};\n\nexport const createNewGroupCall = () => {\n  groupCallHost = true;\n  wss.registerGroupCall({\n    username: store.getState().dashboard.username,\n    peerId: myPeerId\n  });\n\n  store.dispatch(setGroupCallActive(true));\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n}\n;\n\nexport const joinGroupCall = (hostSocketId, roomId) => {\n  const localStream = store.getState().call.localStream;\n  groupCallRoomId = roomId;\n\n  wss.userWantsToJoinGroupCall({\n    peerId: myPeerId,\n    hostSocketId,\n    roomId,\n    localStreamId: localStream.id\n  });\n\n  store.dispatch(setGroupCallActive(true));\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n};\n\nexport const connectToNewUser = (data) => {\n  const localStream = store.getState().call.localStream;\n\n  const call = myPeer.call(data.peerId, localStream);\n\n  call.on('stream', (incomingStream) => {\n    const streams = store.getState().call.groupCallStreams;\n    const stream = streams.find(stream => stream.id === incomingStream.id);\n\n    if (!stream) {\n      addVideoStream(incomingStream);\n    }\n  });\n};\n\nexport const leaveGroupCall = () => {\n  if (groupCallHost) {\n    wss.groupCallClosedByHost({\n      peerId: myPeerId\n    });\n  } else {\n    wss.userLeftGroupCall({\n      streamId: store.getState().call.localStream.id,\n      roomId: groupCallRoomId\n    });\n  }\n  clearGroupData();\n};\n\nexport const clearGroupData = () => {\n  groupCallRoomId = null;\n  groupCallHost = null;\n  store.dispatch(clearGroupCallData());\n  myPeer.destroy();\n  connectWithMyPeer();\n\n  const localStream = store.getState().call.localStream;\n  localStream.getVideoTracks()[0].enabled = true;\n  localStream.getAudioTracks()[0].enabled = true;\n};\n\nexport const removeInactiveStream = (data) => {\n  const groupCallStreams = store.getState().call.groupCallStreams.filter(\n    stream => stream.id !== data.streamId\n  );\n  store.dispatch(setGroupCallIncomingStreams(groupCallStreams));\n};\n\nconst addVideoStream = (incomingStream) => {\n  const groupCallStreams = [\n    ...store.getState().call.groupCallStreams,\n    incomingStream\n  ];\n\n  store.dispatch(setGroupCallIncomingStreams(groupCallStreams));\n};\n\n// if group call is active return roomId if not return false\nexport const checkActiveGroupCall = () => {\n  if (store.getState().call.groupCallActive) {\n    return groupCallRoomId;\n  } else {\n    return false;\n  }\n};\n","import socketClient from 'socket.io-client';\nimport store from '../../store/store';\nimport * as dashboardActions from '../../store/actions/dashboardActions';\nimport * as webRTCHandler from '../webRTC/webRTCHandler';\nimport * as webRTCGroupCallHandler from '../webRTC/webRTCGroupCallHandler';\n\nconst SERVER = 'https://videotalkerbackendserver.herokuapp.com/';\n\nconst broadcastEventTypes = {\n  ACTIVE_USERS: 'ACTIVE_USERS',\n  GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\n};\n\nlet socket;\n\nexport const connectWithWebSocket = () => {\n  socket = socketClient(SERVER);\n\n  socket.on('connection', () => {\n    console.log('succesfully connected with wss server');\n    console.log(socket.id);\n  });\n\n  socket.on('broadcast', (data) => {\n    handleBroadcastEvents(data);\n  });\n\n  // listeners related with direct call\n  socket.on('pre-offer', (data) => {\n    webRTCHandler.handlePreOffer(data);\n  });\n\n  socket.on('pre-offer-answer', (data) => {\n    webRTCHandler.handlePreOfferAnswer(data);\n  });\n\n  socket.on('webRTC-offer', (data) => {\n    webRTCHandler.handleOffer(data);\n  });\n\n  socket.on('webRTC-answer', (data) => {\n    webRTCHandler.handleAnswer(data);\n  });\n\n  socket.on('webRTC-candidate', (data) => {\n    webRTCHandler.handleCandidate(data);\n  });\n\n  socket.on('user-hanged-up', () => {\n    webRTCHandler.handleUserHangedUp();\n  });\n\n  // listeners related with group calls\n\n  socket.on('group-call-join-request', (data) => {\n    webRTCGroupCallHandler.connectToNewUser(data);\n  });\n\n  socket.on('group-call-user-left', (data) => {\n    webRTCGroupCallHandler.removeInactiveStream(data);\n  });\n};\n\nexport const registerNewUser = (username) => {\n  socket.emit('register-new-user', {\n    username: username,\n    socketId: socket.id\n  });\n};\n\n// emitting events to server related with direct call\n\nexport const sendPreOffer = (data) => {\n  socket.emit('pre-offer', data);\n};\n\nexport const sendPreOfferAnswer = (data) => {\n  socket.emit('pre-offer-answer', data);\n};\n\nexport const sendWebRTCOffer = (data) => {\n  socket.emit('webRTC-offer', data);\n};\n\nexport const sendWebRTCAnswer = (data) => {\n  socket.emit('webRTC-answer', data);\n};\n\nexport const sendWebRTCCandidate = (data) => {\n  socket.emit('webRTC-candidate', data);\n};\n\nexport const sendUserHangedUp = (data) => {\n  socket.emit('user-hanged-up', data);\n};\n\n// emitting events related with group calls\n\nexport const registerGroupCall = (data) => {\n  socket.emit('group-call-register', data);\n};\n\nexport const userWantsToJoinGroupCall = (data) => {\n  socket.emit('group-call-join-request', data);\n};\n\nexport const userLeftGroupCall = (data) => {\n  socket.emit('group-call-user-left', data);\n};\n\nexport const groupCallClosedByHost = (data) => {\n  socket.emit('group-call-closed-by-host', data);\n};\n\nconst handleBroadcastEvents = (data) => {\n  switch (data.event) {\n    case broadcastEventTypes.ACTIVE_USERS:\n      const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\n      store.dispatch(dashboardActions.setActiveUsers(activeUsers));\n      break;\n    case broadcastEventTypes.GROUP_CALL_ROOMS:\n      const groupCallRooms = data.groupCallRooms.filter(room => room.socketId !== socket.id);\n      const activeGroupCallRoomId = webRTCGroupCallHandler.checkActiveGroupCall();\n\n      if (activeGroupCallRoomId) {\n        const room = groupCallRooms.find(room => room.roomId === activeGroupCallRoomId);\n        if (!room) {\n          webRTCGroupCallHandler.clearGroupData();\n        }\n      }\n      store.dispatch(dashboardActions.setGroupCalls(groupCallRooms));\n      break;\n    default:\n      break;\n  }\n}\n;\n","export const DASHBOARD_SET_USERNAME = 'DASHBOARD.SET_USERNAME';\nexport const DASHBOARD_SET_ACTIVE_USERS = 'DASHBOARD.SET_ACTIVE_USERS';\nexport const DASHBOARD_SET_GROUP_CALL_ROOMS = 'DASHBOARD.SET_GROUP_CALL_ROOMS';\n\nexport const setUsername = (username) => {\n  return {\n    type: DASHBOARD_SET_USERNAME,\n    username\n  };\n}\n;\n\nexport const setActiveUsers = (activeUsers) => {\n  return {\n    type: DASHBOARD_SET_ACTIVE_USERS,\n    activeUsers\n  };\n}\n;\n\nexport const setGroupCalls = (groupCallRooms) => {\n  return {\n    type: DASHBOARD_SET_GROUP_CALL_ROOMS,\n    groupCallRooms\n  };\n}\n;\n","import * as dashboardActions from '../actions/dashboardActions';\n\nconst initState = {\n  username: '',\n  activeUsers: [],\n  groupCallRooms: []\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case dashboardActions.DASHBOARD_SET_USERNAME:\n      return {\n        ...state,\n        username: action.username\n      };\n    case dashboardActions.DASHBOARD_SET_ACTIVE_USERS:\n      return {\n        ...state,\n        activeUsers: action.activeUsers\n      };\n    case dashboardActions.DASHBOARD_SET_GROUP_CALL_ROOMS:\n      return {\n        ...state,\n        groupCallRooms: action.groupCallRooms\n      };\n    default:\n      return state;\n  }\n}\n;\n\nexport default reducer;\n","export const callStates = {\n  CALL_UNAVAILABLE: 'CALL_UNAVAILABLE',\n  CALL_AVAILABLE: 'CALL_AVAILABLE',\n  CALL_REQUESTED: 'CALL_REQUESTED',\n  CALL_IN_PROGRESS: 'CALL_IN_PROGRESS'\n};\n\nexport const CALL_SET_LOCAL_STREAM = 'CALL.SET_LOCAL_STREAM';\nexport const CALL_SET_CALL_STATE = 'CALL.SET_CALL_STATE';\nexport const CALL_SET_CALLING_DIALOG_VISIBLE = 'CALL.SET_CALLING_DIALOG_VISIBLE';\nexport const CALL_SET_CALLER_USERNAME = 'CALL.SET_CALLER_USERNAME';\nexport const CALL_SET_CALL_REJECTED = 'CALL.SET_CALL_REJECTED';\nexport const CALL_SET_REMOTE_STREAM = 'CALL.SET_REMOTE_STREAM';\nexport const CALL_SET_LOCAL_MICROPHONE_ENABLED = 'CALL.SET_LOCAL_MICROPHONE_ENABLED';\nexport const CALL_SET_LOCAL_CAMERA_ENABLED = 'CALL.SET_LOCAL_CAMERA_ENABLED';\nexport const CALL_SET_SCREEN_SHARING_ACTIVE = 'CALL.SET_SCREEN_SHARING_ACTIVE';\nexport const CALL_RESET_CALL_STATE = 'CALL.RESET_CALL_STATE';\nexport const CALL_SET_GROUP_CALL_ACTIVE = 'CALL.CALL_SET_GROUP_CALL_ACTIVE';\nexport const CALL_SET_GROUP_CALL_STREAMS = 'CALL.SET_GROUP_CALL_STREAMS';\nexport const CALL_CLEAR_GROUP_CALL_DATA = 'CALL.CLEAR_GROUP_CALL_DATA';\nexport const CALL_SET_CHAT_MESSAGE = 'CALL.SET_CHAT_MESSAGE';\n\nexport const setLocalStream = (localStream) => {\n  return {\n    type: CALL_SET_LOCAL_STREAM,\n    localStream\n  };\n}\n;\n\nexport const setCallState = (callState) => {\n  return {\n    type: CALL_SET_CALL_STATE,\n    callState\n  };\n};\n\nexport const setCallingDialogVisible = (visible) => {\n  return {\n    type: CALL_SET_CALLING_DIALOG_VISIBLE,\n    visible\n  };\n};\n\nexport const setCallerUsername = (callerUsername) => {\n  return {\n    type: CALL_SET_CALLER_USERNAME,\n    callerUsername\n  };\n}\n;\n\nexport const setCallRejected = (callRejectedDetails) => {\n  return {\n    type: CALL_SET_CALL_REJECTED,\n    callRejected: {\n      rejected: callRejectedDetails.rejected,\n      reason: callRejectedDetails.reason\n    }\n  };\n};\n\nexport const setRemoteStream = (remoteStream) => {\n  return {\n    type: CALL_SET_REMOTE_STREAM,\n    remoteStream\n  };\n}\n;\n\nexport const setLocalMicrophoneEnabled = (enabled) => {\n  return {\n    type: CALL_SET_LOCAL_MICROPHONE_ENABLED,\n    enabled\n  };\n};\n\nexport const setLocalCameraEnabled = (enabled) => {\n  return {\n    type: CALL_SET_LOCAL_CAMERA_ENABLED,\n    enabled\n  };\n};\n\nexport const setScreenSharingActive = (active) => {\n  return {\n    type: CALL_SET_SCREEN_SHARING_ACTIVE,\n    active\n  };\n}\n;\n\nexport const resetCallDataState = () => {\n  return {\n    type: CALL_RESET_CALL_STATE\n  };\n};\n\nexport const setGroupCallActive = (active) => {\n  return {\n    type: CALL_SET_GROUP_CALL_ACTIVE,\n    active\n  };\n};\n\nexport const setGroupCallIncomingStreams = (groupCallStreams) => {\n  return {\n    type: CALL_SET_GROUP_CALL_STREAMS,\n    groupCallStreams\n  };\n};\n\nexport const clearGroupCallData = () => {\n  return {\n    type: CALL_CLEAR_GROUP_CALL_DATA\n  };\n};\n\nexport const setMessage = (messageReceived, messageContent) => {\n  return {\n    type: CALL_SET_CHAT_MESSAGE,\n    message: {\n      received: messageReceived,\n      content: messageContent\n    }\n  };\n};","import * as callActions from '../actions/callActions';\n\nconst initState = {\n  localStream: null,\n  callState: callActions.callStates.CALL_UNAVAILABLE,\n  callingDialogVisible: false,\n  callerUsername: '',\n  callRejected: {\n    rejected: false,\n    reason: ''\n  },\n  remoteStream: null,\n  localCameraEnabled: true,\n  localMicrophoneEnabled: true,\n  screenSharingActive: false,\n  groupCallActive: false,\n  groupCallStreams: [],\n  message: {\n    received: false,\n    content: ''\n  }\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case callActions.CALL_SET_LOCAL_STREAM:\n      return {\n        ...state,\n        localStream: action.localStream\n      };\n    case callActions.CALL_SET_CALL_STATE:\n      return {\n        ...state,\n        callState: action.callState\n      };\n    case callActions.CALL_SET_CALLING_DIALOG_VISIBLE:\n      return {\n        ...state,\n        callingDialogVisible: action.visible\n      };\n    case callActions.CALL_SET_CALLER_USERNAME:\n      return {\n        ...state,\n        callerUsername: action.callerUsername\n      };\n    case callActions.CALL_SET_CALL_REJECTED:\n      return {\n        ...state,\n        callRejected: action.callRejected\n      };\n    case callActions.CALL_SET_REMOTE_STREAM:\n      return {\n        ...state,\n        remoteStream: action.remoteStream\n      };\n    case callActions.CALL_SET_LOCAL_CAMERA_ENABLED:\n      return {\n        ...state,\n        localCameraEnabled: action.enabled\n      };\n    case callActions.CALL_SET_LOCAL_MICROPHONE_ENABLED:\n      return {\n        ...state,\n        localMicrophoneEnabled: action.enabled\n      };\n    case callActions.CALL_SET_SCREEN_SHARING_ACTIVE:\n      return {\n        ...state,\n        screenSharingActive: action.active\n      };\n    case callActions.CALL_RESET_CALL_STATE:\n      return {\n        ...state,\n        remoteStream: null,\n        screenSharingActive: false,\n        callerUsername: '',\n        localMicrophoneEnabled: true,\n        localCameraEnabled: true,\n        callingDialogVisible: false\n      };\n    case callActions.CALL_SET_GROUP_CALL_ACTIVE:\n      return {\n        ...state,\n        groupCallActive: action.active\n      };\n    case callActions.CALL_SET_GROUP_CALL_STREAMS:\n      return {\n        ...state,\n        groupCallStreams: action.groupCallStreams\n      };\n    case callActions.CALL_CLEAR_GROUP_CALL_DATA:\n      return {\n        ...state,\n        groupCallActive: false,\n        groupCallStreams: [],\n        callState: callActions.callStates.CALL_AVAILABLE,\n        localMicrophoneEnabled: true,\n        localCameraEnabled: true\n      };\n    case callActions.CALL_SET_CHAT_MESSAGE:\n      return {\n        ...state,\n        message: action.message\n      }\n    default:\n      return state;\n  }\n}\n;\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport dashboardReducer from './reducers/dashboardReducer';\nimport callReducer from './reducers/callReducer';\n\nexport default combineReducers({\n  dashboard: dashboardReducer,\n  call: callReducer\n});\n","import { createStore } from 'redux';\nimport mainReducer from './reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  mainReducer,\n  composeWithDevTools()\n);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/logo.d549b294.png\";","export default __webpack_public_path__ + \"static/media/userAvatar.a6143582.png\";","import React from 'react';\nimport userAvatar from '../../../resources/userAvatar.png';\nimport { callToOtherUser } from '../../../utils/webRTC/webRTCHandler';\nimport { callStates } from '../../../store/actions/callActions';\n\nconst ActiveUsersListItem = (props) => {\n  const { activeUser, callState } = props;\n\n  const handleListItemPressed = () => {\n    if (callState === callStates.CALL_AVAILABLE) {\n      callToOtherUser(activeUser);\n    }\n  };\n\n  return (\n    <div className='active_user_list_item' onClick={handleListItemPressed}>\n      <div className='active_user_list_image_container'>\n        <img className='active_user_list_image' src={userAvatar} />\n      </div>\n      <span className='active_user_list_text'>{activeUser.username}</span>\n    </div>\n  );\n};\n\nexport default ActiveUsersListItem;\n","import React from 'react';\nimport ActiveUsersListItem from './ActiveUsersListItem';\nimport { connect } from 'react-redux';\n\nimport './ActiveUsersList.css';\n\nconst ActiveUsersList = ({ activeUsers, callState }) => {\n  return (\n    <div className='active_user_list_container'>\n      {activeUsers.map((activeUser) =>\n        <ActiveUsersListItem\n          key={activeUser.socketId}\n          activeUser={activeUser}\n          callState={callState}\n        />)}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ dashboard, call }) => ({\n  ...dashboard,\n  ...call\n});\n\nexport default connect(mapStateToProps)(ActiveUsersList);\n","import React, { useRef, useEffect } from 'react';\n\nconst styles = {\n  videoContainer: {\n    width: '150px',\n    height: '150px',\n    borderRadius: '8px',\n    position: 'absolute',\n    top: '5%',\n    right: '23%'\n  },\n  videoElement: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst LocalVideoView = props => {\n  const { localStream } = props;\n  const localVideoRef = useRef();\n\n  useEffect(() => {\n    if (localStream) {\n      const localVideo = localVideoRef.current;\n      localVideo.srcObject = localStream;\n\n      localVideo.onloadedmetadata = () => {\n        localVideo.play();\n      };\n    }\n  }, [localStream]);\n\n  return (\n    <div style={styles.videoContainer} className='background_secondary_color'>\n      <video style={styles.videoElement} ref={localVideoRef} autoPlay muted />\n    </div>\n  );\n};\n\nexport default LocalVideoView;\n","import React, { useRef, useEffect } from 'react';\n\nconst styles = {\n  videoContainer: {\n    width: '100%',\n    height: '100%'\n  },\n  videoElement: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst LocalVideoView = props => {\n  const { remoteStream } = props;\n  const remoteVideoRef = useRef();\n\n  useEffect(() => {\n    if (remoteStream) {\n      const remoteVideo = remoteVideoRef.current;\n      remoteVideo.srcObject = remoteStream;\n\n      remoteVideo.onloadedmetadata = () => {\n        remoteVideo.play();\n      };\n    }\n  }, [remoteStream]);\n\n  return (\n    <div style={styles.videoContainer}>\n      <video style={styles.videoElement} ref={remoteVideoRef} autoPlay />\n    </div>\n  );\n};\n\nexport default LocalVideoView;\n","import React, { useEffect } from 'react';\n\nimport './CallRejectedDialog.css';\n\nconst CallRejectedDialog = ({ reason, hideCallRejectedDialog }) => {\n  useEffect(() => {\n    setTimeout(() => {\n      hideCallRejectedDialog({\n        rejected: false,\n        reason: ''\n      });\n    }, [4000]);\n  }, []);\n\n  return (\n    <div className='call_rejected_dialog background_secondary_color'>\n      <span>\n        {reason}\n      </span>\n    </div>\n  );\n};\n\nexport default CallRejectedDialog;\n","import React from 'react';\nimport { acceptIncomingCallRequest, rejectIncomingCallRequest } from '../../../utils/webRTC/webRTCHandler';\n\nimport './IncomingCallDialog.css';\n\nconst IncomingCallDialog = ({ callerUsername }) => {\n  const handleAcceptButtonPressed = () => {\n    acceptIncomingCallRequest();\n  };\n\n  const handleRejectButtonPressed = () => {\n    rejectIncomingCallRequest();\n  };\n\n  return (\n    <div className='direct_call_dialog background_secondary_color'>\n      <span className='direct_call_dialog_caller_name'>{callerUsername}</span>\n      <div className='direct_call_dialog_button_container'>\n        <button className='direct_call_dialog_accept_button' onClick={handleAcceptButtonPressed}>\n          Accept\n        </button>\n        <button className='direct_call_dialog_reject_button' onClick={handleRejectButtonPressed}>\n          Reject\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomingCallDialog;\n","import React from 'react';\nimport './CallingDialog.css';\nimport { hangUp } from '../../../utils/webRTC/webRTCHandler';\nimport { MdCallEnd } from 'react-icons/md';\n\nconst styles = {\n  buttonContainer: {\n    marginTop: '10px',\n    width: '40px',\n    height: '40px',\n    borderRadius: '40px',\n    border: '2px solid #e6e5e8',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n};\n\nconst CallingDialog = () => {\n  const handleHangUpButtonPressed = () => {\n    hangUp();\n  };\n\n  return (\n    <div className='direct_calling_dialog background_secondary_color'>\n      <span>Calling</span>\n      <div style={styles.buttonContainer} onClick={handleHangUpButtonPressed}>\n        <MdCallEnd style={{ width: '20px', height: '20px', fill: '#e6e5e8' }} />\n      </div>\n    </div>\n  );\n};\n\nexport default CallingDialog;\n","import React from 'react';\n\nconst styles = {\n  button: {\n    width: '50px',\n    height: '50px',\n    borderRadius: '40px',\n    border: '2px solid #e6e5e8',\n    textDecoration: 'none',\n    backgroundColor: '#282C34',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: '10px',\n    boxShadow: 'none',\n    borderImage: 'none',\n    borderStyle: 'none',\n    borderWidth: '0px',\n    outline: 'none'\n  }\n};\n\nconst ConversationButton = (props) => {\n  const { onClickHandler } = props;\n  return (\n    <button style={styles.button} onClick={onClickHandler}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default ConversationButton;\n","import React from 'react';\nimport { MdCallEnd, MdMic, MdMicOff, MdVideocam, MdVideocamOff, MdVideoLabel, MdCamera } from 'react-icons/md';\nimport ConversationButton from './ConversationButton';\nimport { switchForScreenSharingStream, hangUp } from '../../../utils/webRTC/webRTCHandler';\n\nconst styles = {\n  buttonContainer: {\n    display: 'flex',\n    position: 'absolute',\n    bottom: '22%',\n    left: '35%'\n  },\n  icon: {\n    width: '25px',\n    height: '25px',\n    fill: '#e6e5e8'\n  }\n};\n\nconst ConversationButtons = (props) => {\n  const {\n    localStream,\n    localCameraEnabled,\n    localMicrophoneEnabled,\n    setCameraEnabled,\n    setMicrophoneEnabled,\n    screenSharingActive,\n    groupCall\n  } = props;\n\n  const handleMicButtonPressed = () => {\n    const micEnabled = localMicrophoneEnabled;\n    localStream.getAudioTracks()[0].enabled = !micEnabled;\n    setMicrophoneEnabled(!micEnabled);\n  };\n\n  const handleCameraButtonPressed = () => {\n    const cameraEnabled = localCameraEnabled;\n    localStream.getVideoTracks()[0].enabled = !cameraEnabled;\n    setCameraEnabled(!cameraEnabled);\n  };\n\n  const handleScreenSharingButtonPressed = () => {\n    switchForScreenSharingStream();\n  };\n\n  const handleHangUpButtonPressed = () => {\n    hangUp();\n  };\n\n  return (\n    <div style={styles.buttonContainer}>\n      <ConversationButton onClickHandler={handleMicButtonPressed}>\n        {localMicrophoneEnabled ? <MdMic style={styles.icon} /> : <MdMicOff style={styles.icon} />}\n      </ConversationButton>\n      {!groupCall && <ConversationButton onClickHandler={handleHangUpButtonPressed}>\n        <MdCallEnd style={styles.icon} />\n      </ConversationButton>}\n      <ConversationButton onClickHandler={handleCameraButtonPressed}>\n        {localCameraEnabled ? <MdVideocam style={styles.icon} /> : <MdVideocamOff style={styles.icon} />}\n      </ConversationButton>\n      {!groupCall && <ConversationButton onClickHandler={handleScreenSharingButtonPressed}>\n        {screenSharingActive ? <MdCamera style={styles.icon} /> : <MdVideoLabel style={styles.icon} />}\n      </ConversationButton>}\n    </div>\n  );\n};\n\nexport default ConversationButtons;\n","import React from 'react';\r\n\r\nconst MessageDisplayer = (props) => {\r\n    return (\r\n        <div className='message_displayer'>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessageDisplayer;","import React, { useState, useEffect } from 'react';\r\nimport { sendMessageUsingDataChannel } from '../../../utils/webRTC/webRTCHandler';\r\nimport MessageDisplayer from './MessageDisplayer';\r\n\r\nimport './Messenger.css';\r\n\r\nconst Messenger = ({ message, setDirectCallMessage }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleOnKeyDownEvent = (e) => {\r\n        if (e.keyCode === 13) {\r\n            sendMessageUsingDataChannel(inputValue);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (message.received) {\r\n            setTimeout(() => {\r\n                setDirectCallMessage(false, '')\r\n            }, [3000]);\r\n        }\r\n    }, [message.received])\r\n    return (\r\n        <>\r\n            <input \r\n            className='messages_input'\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={(e) => {setInputValue(e.target.value)}}\r\n            onKeyDown={handleOnKeyDownEvent}\r\n            placeholder='Type your message'\r\n            />\r\n            {message.received && <MessageDisplayer message={message.content} />}  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Messenger;","import React from 'react';\nimport { connect } from 'react-redux';\nimport LocalVideoView from '../LocalVideoView/LocalVideoView';\nimport RemoteVideoView from '../RemoteVideoView/RemoteVideoView';\nimport CallRejectedDialog from '../CallRejectedDialog/CallRejectedDialog';\nimport IncomingCallDialog from '../IncomingCallDialog/IncomingCallDialog';\nimport CallingDialog from '../CallingDialog/CallingDialog';\nimport { callStates, setCallRejected, setLocalCameraEnabled, setLocalMicrophoneEnabled, setMessage } from '../../../store/actions/callActions';\nimport ConversationButtons from '../ConversationButtons/ConversationButtons';\nimport Messenger from '../Messenger/Messenger';\n\nconst DirectCall = (props) => {\n  const {\n    localStream,\n    remoteStream,\n    callState,\n    callerUsername,\n    callingDialogVisible,\n    callRejected,\n    hideCallRejectedDialog,\n    setDirectCallMessage,\n    message\n  } = props;\n\n  return (\n    <>\n      <LocalVideoView localStream={localStream} />\n      {remoteStream && callState === callStates.CALL_IN_PROGRESS && <RemoteVideoView remoteStream={remoteStream} />}\n      {callRejected.rejected && <CallRejectedDialog\n        reason={callRejected.reason}\n        hideCallRejectedDialog={hideCallRejectedDialog}\n      />}\n      {callState === callStates.CALL_REQUESTED && <IncomingCallDialog callerUsername={callerUsername} />}\n      {callingDialogVisible && <CallingDialog />}\n      {remoteStream && callState === callStates.CALL_IN_PROGRESS && <ConversationButtons {...props} />}\n      {remoteStream && callState === callStates.CALL_IN_PROGRESS && <Messenger message={message} setDirectCallMessage={setDirectCallMessage}/>}\n    </>\n  );\n};\n\nfunction mapStoreStateToProps ({ call }) {\n  return {\n    ...call\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    hideCallRejectedDialog: (callRejectedDetails) => dispatch(setCallRejected(callRejectedDetails)),\n    setCameraEnabled: (enabled) => dispatch(setLocalCameraEnabled(enabled)),\n    setMicrophoneEnabled: (enabled) => dispatch(setLocalMicrophoneEnabled(enabled)),\n    setDirectCallMessage: (received, content) => dispatch(setMessage(received, content))\n  };\n}\n\nexport default connect(mapStoreStateToProps, mapDispatchToProps)(DirectCall);\n","import React from 'react';\n\nimport './DashboardInformation.css';\n\nconst DashboardInformation = ({ username }) => {\n  return (\n    <div className='dashboard_info_text_container'>\n      <span className='dashboard_info_text_title'>\n        Hello {username} welcome in VideoTalker.\n      </span>\n      <span className='dashboard_info_text_description'>\n        You can start a call calling directy to a person from the list or\n        you can create or join group call.\n      </span>\n    </div>\n  );\n};\n\nexport default DashboardInformation;\n","import React from 'react';\nimport * as webRTCGroupCallHandler from '../../../utils/webRTC/webRTCGroupCallHandler';\n\nconst GroupCallRoomsListItem = ({ room }) => {\n  const handleListItemPressed = () => {\n    webRTCGroupCallHandler.joinGroupCall(room.socketId, room.roomId);\n  };\n\n  return (\n    <div onClick={handleListItemPressed} className='group_calls_list_item background_main_color'>\n      <span>{room.hostName}</span>\n    </div>\n  );\n};\n\nexport default GroupCallRoomsListItem;\n","import React from 'react';\nimport GroupCallRoomsListItem from './GroupCallRoomsListItem';\nimport { connect } from 'react-redux';\nimport './GroupCallRoomsList.css';\n\nconst GroupCallRoomsList = (props) => {\n  const { groupCallRooms } = props;\n  return (\n    <>\n      {groupCallRooms.map(room => <GroupCallRoomsListItem key={room.roomId} room={room} />)}\n    </>\n  );\n};\n\nconst mapStoreStateToProps = ({ dashboard }) => (\n  {\n    ...dashboard\n  }\n);\n\nexport default connect(mapStoreStateToProps)(GroupCallRoomsList);\n","import React from 'react';\n\nimport './GroupCallButton.css';\n\nconst GroupCallButton = ({ onClickHandler, label }) => {\n  return (\n    <button onClick={onClickHandler} className='group_call_button'>\n      {label}\n    </button>\n  );\n};\n\nexport default GroupCallButton;\n","import React, { useRef, useEffect } from 'react';\n\nconst styles = {\n  videoContainer: {\n    width: '300px',\n    height: '300px'\n  },\n  videoElement: {\n    width: '100%',\n    height: '100%'\n  }\n};\n\nconst GroupCallVideo = ({ stream }) => {\n  const videoRef = useRef();\n\n  useEffect(() => {\n    const remoteGroupCallVideo = videoRef.current;\n    remoteGroupCallVideo.srcObject = stream;\n    remoteGroupCallVideo.onloadedmetadata = () => {\n      remoteGroupCallVideo.play();\n    };\n  }, [stream]);\n\n  return (\n    <div style={styles.videoContainer}>\n      <video ref={videoRef} autoPlay style={styles.videoElement} />\n    </div>\n  );\n};\n\nexport default GroupCallVideo;\n","import React from 'react';\nimport ConversationButtons from '../ConversationButtons/ConversationButtons';\n\nimport './GroupCallRoom.css';\nimport GroupCallVideo from './GroupCallVideo';\n\nconst GroupCallRoom = (props) => {\n  const { groupCallStreams } = props;\n  return (\n    <div className='group_call_room_container'>\n      <span className='group_call_title'>Group Call</span>\n      <div className='group_call_videos_container'>\n        {\n          groupCallStreams.map(stream => {\n            return <GroupCallVideo key={stream.id} stream={stream} />;\n          })\n        }\n      </div>\n      <ConversationButtons {...props} groupCall/>\n    </div>\n  );\n};\n\nexport default GroupCallRoom;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport GroupCallButton from '../GroupCallButton/GroupCallButton';\nimport { callStates, setLocalCameraEnabled, setLocalMicrophoneEnabled } from '../../../store/actions/callActions';\nimport * as webRTCGroupCallHandler from '../../../utils/webRTC/webRTCGroupCallHandler';\nimport GroupCallRoom from '../GroupCallRoom/GroupCallRoom';\n\nconst GroupCall = (props) => {\n  const { callState, localStream, groupCallActive, groupCallStreams } = props;\n\n  const createRoom = () => {\n    webRTCGroupCallHandler.createNewGroupCall();\n  };\n\n  const leaveRoom = () => {\n    webRTCGroupCallHandler.leaveGroupCall();\n  };\n\n  return (\n    <>\n      {!groupCallActive && localStream && callState !== callStates.CALL_IN_PROGRESS &&\n        <GroupCallButton onClickHandler={createRoom} label='Create room' />}\n      {groupCallActive && <GroupCallRoom {...props} />}\n      {groupCallActive && <GroupCallButton onClickHandler={leaveRoom} label='Leave room' />}\n    </>\n  );\n};\n\nconst mapStoreStateToProps = ({ call }) => ({\n  ...call\n});\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    setCameraEnabled: enabled => dispatch(setLocalCameraEnabled(enabled)),\n    setMicrophoneEnabled: enabled => dispatch(setLocalMicrophoneEnabled(enabled))\n  };\n};\n\nexport default connect(mapStoreStateToProps, mapActionsToProps)(GroupCall);\n","import React, { useEffect } from 'react';\nimport logo from '../resources/logo.png';\nimport ActiveUsersList from './components/ActiveUsersList/ActiveUsersList';\nimport * as webRTCHandler from '../utils/webRTC/webRTCHandler';\nimport * as webRTCGroupHandler from '../utils/webRTC/webRTCGroupCallHandler';\nimport DirectCall from './components/DirectCall/DirectCall';\nimport { connect } from 'react-redux';\nimport DashboardInformation from './components/DashboardInformation/DashboardInformation';\nimport { callStates } from '../store/actions/callActions';\nimport GroupCallRoomsList from './components/GroupCallRoomsList/GroupCallRoomsList';\nimport GroupCall from './components/GroupCall/GroupCall';\n\nimport './Dashboard.css';\n\n\nconst Dashboard = ({ username, callState }) => {\n  useEffect(() => {\n    webRTCHandler.getLocalStream();\n    webRTCGroupHandler.connectWithMyPeer();\n  }, []);\n\n  return (\n    <div className='dashboard_container background_main_color'>\n      <div className='dashboard_left_section'>\n        <div className='dashboard_content_container'>\n          <DirectCall />\n          <GroupCall />\n          {callState !== callStates.CALL_IN_PROGRESS && <DashboardInformation username={username} />}\n        </div>\n        <div className='dashboard_rooms_container background_secondary_color'>\n          <GroupCallRoomsList />\n        </div>\n      </div>\n      <div className='dashboard_right_section background_secondary_color'>\n        <div className='dashboard_active_users_list'>\n          <ActiveUsersList />\n        </div>\n        <div className='dashboard_logo_container'>\n          <img className='dashboard_logo_image' src={logo} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ call, dashboard }) => ({\n  ...call,\n  ...dashboard\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React from 'react';\n\nconst UsernameInput = (props) => {\n  const { username, setUsername } = props;\n\n  return (\n    <div className='login-page_input_container'>\n      <input\n        placeholder='Enter your name'\n        type='text'\n        value={username}\n        onChange={(event) => { setUsername(event.target.value); }}\n        className='login-page_input background_main_color text_main_color'\n      />\n    </div>\n  );\n};\n\nexport default UsernameInput;\n","import React from 'react';\n\nconst SubmitButton = ({ handleSubmitButtonPressed }) => {\n  return (\n    <div className='login-page_button_container'>\n      <button\n        className='login-page_button background_main_color text_main_color'\n        onClick={handleSubmitButtonPressed}\n      >\n        Start using VideoTalker\n      </button>\n    </div>\n\n  );\n};\n\nexport default SubmitButton;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport logo from '../resources/logo.png';\nimport UsernameInput from './components/UsernameInput';\nimport SubmitButton from './components/SubmitButton';\nimport { useHistory } from 'react-router-dom';\nimport { setUsername } from '../store/actions/dashboardActions';\nimport { registerNewUser } from '../utils/wssConnection/wssConnection';\nimport './LoginPage.css';\n\nconst LoginPage = ({ saveUsername }) => {\n  const [username, setUsername] = useState('');\n\n  const history = useHistory();\n\n  const handleSubmitButtonPressed = () => {\n    registerNewUser(username);\n    saveUsername(username);\n    history.push('/dashboard');\n  };\n\n  return (\n    <div className='login-page_container background_main_color'>\n      <div className='login-page_login_box background_secondary_color'>\n        <div className='login-page_logo_container'>\n          <img className='login-page_logo_image' src={logo} alt='VideoTalker' />\n        </div>\n        <div className='login-page_title_container'>\n          <h2>Get on Board</h2>\n        </div>\n        <UsernameInput username={username} setUsername={setUsername} />\n        <SubmitButton handleSubmitButtonPressed={handleSubmitButtonPressed} />\n      </div>\n    </div>\n  );\n};\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n    saveUsername: username => dispatch(setUsername(username))\n  };\n};\n\nexport default connect(null, mapActionsToProps)(LoginPage);\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { connectWithWebSocket } from './utils/wssConnection/wssConnection';\nimport Dashboard from './Dashboard/Dashboard';\nimport LoginPage from './LoginPage/LoginPage';\n\nfunction App () {\n  useEffect(() => {\n    connectWithWebSocket();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/dashboard'>\n          <Dashboard />\n        </Route>\n        <Route path='/'>\n          <LoginPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}